@using SnitzCore.Data.Extensions
@using SnitzCore.Service.Extensions
@model List<Snitz.PhotoAlbum.Models.AlbumImage>
@{
    Layout = "Layout";
    var member = "";
    if (Model.Any())
    {
        member = Model.First().Member?.Name;
    }
}
@section MetaData
{
    <title>@member @Localizer["lblPhotoAlbum"]</title>

    <meta name="title" content="@member @Localizer["lblPhotoAlbum"]" />
    <meta name="description" content="Photo Album" />
    <meta name="robots" content="noindex,nofollow" />
}
@section Styles
{
    <style>

        .carousel-inner > .carousel-item > img, .carousel-inner > .carousel-item > a > img {
            max-height: 100%;margin: auto;
        }
        .carousel-control-next,
        .carousel-control-prev /*, .carousel-indicators */ {
            filter: invert(100%);
        }

    </style>

}



<div class="pt-0">
    <snitz-breadcrumb show-filter="true"></snitz-breadcrumb>
    <div class="collapse" id="showFilters">
    <form asp-action="MemberImages" asp-controller="PhotoAlbum" data-ajax="true" data-ajax-update="#ImageContainer">
        <div class="row">
            <div class="col col-lg-6">
                <input type="text" value='@ViewBag.Display' name="display" id="display-template" style="display: none;" />
                <div class="input-group">
                    <select class="form-select" id="album-sortby" name="SortBy">
                        <option value="id" snitz-if='@ViewBag.SortBy == "id"' selected>@Localizer["optSortId"]</option>
                        <option value="id" snitz-if='@ViewBag.SortBy != "id"'>@Localizer["optSortId"]</option>
                        <option value="date" snitz-if='@ViewBag.SortBy == "date"' selected>@Localizer["optSortDate"]</option>
                        <option value="date" snitz-if='@ViewBag.SortBy != "date"'>@Localizer["optSortDate"]</option>
                        <option value="desc" snitz-if='@ViewBag.SortBy == "desc"' selected>@Localizer["optSortDesc"]</option>
                        <option value="desc" snitz-if='@ViewBag.SortBy != "desc"'>@Localizer["optSortDesc"]</option>
                        <option value="file" snitz-if='@ViewBag.SortBy == "file"' selected>@Localizer["optSortFile"]</option>
                        <option value="file" snitz-if='@ViewBag.SortBy != "file"'>@Localizer["optSortFile"]</option>
                    </select>
                    <select class="form-select" name="SortOrder" id="album-sortdesc">
                        <option value="desc" snitz-if="@(ViewBag.SortDir.ToLower() == "desc")" selected>@Localizer["optDesc"]</option>
                        <option value="desc" snitz-if="@(ViewBag.SortDir.ToLower() != "desc")">@Localizer["optDesc"]</option>
                        <option value="asc" snitz-if="@(ViewBag.SortDir.ToLower() == "asc")" selected>@Localizer["optAsc"]</option>
                        <option value="asc" snitz-if="@(ViewBag.SortDir.ToLower() != "asc")">@Localizer["optAsc"]</option>
                    </select>
                    <a data-ajax="true"
                       data-ajax-mode="replace"
                       data-ajax-update="#ImageContainer"
                       data-ajax-url='@Url.Action("MemberImages", "PhotoAlbum", new { id = ViewBag.MemberId, display = 0, pagenum = 1 })'
                       class="btn btn-outline-info"
                       title="@Localizer["tipThumbs"]">
                        <li class="fa fa-th"></li>
                    </a>
                    <a data-ajax="true"
                       data-ajax-update="#ImageContainer"
                       data-ajax-url='@Url.Action("MemberImages", "PhotoAlbum", new { id = ViewBag.MemberId, display = 2, pagenum = 1 })'
                       class="btn btn-outline-info"
                       title="@Localizer["tipList"]">
                        <li class="fa fa-align-justify"></li>
                    </a>
                    <a data-ajax="true"
                       data-ajax-update="#ImageContainer"
                       data-ajax-url='@Url.Action("MemberImages", "PhotoAlbum", new { id = ViewBag.MemberId, display = 1, pagenum = 1 })'
                       class="btn btn-outline-info"
                       title="@Localizer["tipDetails"]">
                        <li class="fa fa-list"></li>
                    </a>
                    <a data-ajax="true"
                       data-ajax-update="#ImageContainer"
                       data-ajax-url='@Url.Action("MemberImages", "PhotoAlbum", new { id = ViewBag.MemberId, display = 3, pagenum = 1 })'
                       class="btn btn-outline-info"
                       title="@Localizer["tipSlide"]">
                        <li class="fa fa-film"></li>
                    </a>
                    <button snitz-if="@ViewBag.IsOwner" class="btn btn-outline-primary" id="photo-upload" title="@Localizer["lblUpload"]"><i class="fa fa-upload"></i></button>
                </div>
            </div>
        </div>
        </form>
    </div>
    <div class="container mt-3" id="ImageContainer">
        <partial name="_MemberThumbs"/>
    </div>
</div>
<partial name="Modal\UploadModal" />

@section Scripts
{

    <script src="~/js/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/js/jquery.lazyload-any.min.js" type="text/javascript"></script>
   <script type="text/javascript">
       $('.lazyloadtr').lazyload({
           // Sets the pixels to load earlier. Setting threshold to 200 causes image to load 200 pixels
           // before it appears on viewport. It should be greater or equal zero.
           threshold: 100,

           // Sets the callback function when the load event is firing.
           // element: The content in lazyload tag will be returned as a jQuery object.
           load: function(element) {},

           // Sets events to trigger lazyload. Default is customized event `appear`, it will trigger when
           // element appear in screen. You could set other events including each one separated by a space.
           trigger: "appear"
       });
        $(document).on('click', '#submitUpload',
            function (e) {
                e.preventDefault();
                var form = $("#upload-form");
                var formData = new FormData(form[0]);
                $.ajax({
                    url: SnitzVars.baseUrl + $("#upload-form").attr("action"),
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.result) {
                            $('#uploadModal').modal('hide');
                            location.reload();
                        }
                    },
                    error: function (data) {
                        alert("error");
                        $('#upload-content').html(data);
                    },
                    complete: function (data) {
                        $('#uploadModal').modal('hide');
                    }
                });
                return false;
            });
        $(document).on("click", "#photo-upload",
            function(e) {
                e.preventDefault();
                $('#upload-content').load(SnitzVars.baseUrl + "/PhotoAlbum/UploadForm/?showall=true",
                    function() {
                        $('#uploadModal').modal('show');
                    });
            });

        $(document).on('click', '.confirm-privacy', function (e) {
                e.preventDefault();
                var href = $(this).attr('href');
                 (async () => {
                       const result = await b_confirm(Snitzres.cnfImagePrivacy)
                     if (result) {
                        $.post(href,
                             function (data) {
                                 if (!data) {
                                     //appendAlert(data.error, 'error');;
                                 } else {

                                 $('#ImageContainer').html(data);
                                 }
                             }
                         );
                     }
                 })();

            });
        $(document).on('click', '.confirm-feature', function (e) {
            e.preventDefault();
            var href = $(this).attr('href');
            (async () => {
                 const result = await b_confirm(Snitzres.cnfImageFeature)
                if (result) {
                 $.post(href,
                     function (data) {
                         if (!data) {
                             //appendAlert(data.error, 'error');;
                         } else {

                             $('#ImageContainer').html(data);
                         }
                     }
                 );
                }
            })();

        });
         $(document).on('click', '.confirm-delimage', function (e) {
            e.preventDefault();
            var href = $(this).attr('href');
             (async () => {
                    const result = await b_confirm(Snitzres.cnfDeleteImage)
                 if (result) {
                     $.post(href.replace("~", SnitzVars.baseUrl),
                         function (data) {
                             if (!data) {
                                 //appendAlert(data.error, 'error');;
                             } else {

                                 $('#ImageContainer').html(data);
                             }
                         }
                     );
                 }
             })();

        });


   </script>
}