@model Snitz.PhotoAlbum.ViewModels.ImageModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>title</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <script type="text/javascript" src="/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript" src="/js/jquery.min.js"></script>
    <style>

        .carousel-inner > .carousel-item > img, .carousel-inner > .carousel-item > a > img {
            max-height: 100%;margin: auto;
        }
        .carousel-control-next,
        .carousel-control-prev /*, .carousel-indicators */ {
            filter: invert(100%);
        }

    </style>
</head>
<body>
<div class="container-fluid">
    <div class="row mb-3 center">
        <div class="col-6 col-md-3">
            <div class="row">
                <div class="col-1">&nbsp;</div>
                <label for="image-timer" class="col-form-label col-4">Select Interval</label>
                <div class="col">
                    <select id="image-timer" class="form-control">
                        <option value="1">@Localizer["xSeconds", 1]</option>
                        <option value="3">@Localizer["xSeconds", 3]</option>
                        <option value="5" selected>@Localizer["xSeconds", 5]</option>
                        <option value="10">@Localizer["xSeconds", 10]</option>
                        <option value="20">@Localizer["xSeconds", 20]</option>
                        <option value="30">@Localizer["xSeconds", 30]</option>
                        <option value="0">@Localizer["ActiveRefresh_None"]</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
        <div id="albumCarousel" class="carousel slide" >

        <div class="carousel-inner">
            @{
                foreach (var image in Model.Images)
                {
                    if (Model.CurrentIdx == image.Id)
                    {
                        <div class="carousel-item active">
                            <img class="d-block" src="@image.Path?width=1024&height=768&format=jpg&rmode=crop" alt="..." width="1024" loading="lazy">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>@image.Name</h5>
                                <p>@image.Description</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item">
                            <img class="d-block" loading="lazy" src="@image.Path?width=1024&height=768&format=jpg&rmode=crop" width="1024" alt="..." loading="lazy">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>@image.Name</h5>
                                <p>@image.Description</p>
                            </div>
                        </div>
                    }
                }
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#albumCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#albumCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>
<script>

        let carousel = new bootstrap.Carousel('#albumCarousel',
        {
            interval: 5000,
            ride : 'carousel',
            wrap: true
        });

    $(document).on('change',
        '#image-timer',
        function(e) {
            e.preventDefault();
            var secs = $(this).val();
            var interval = 1000 * parseInt(secs);
            carousel.dispose();
            if (secs > 0) {
                carousel = new bootstrap.Carousel('#albumCarousel',
                    {
                        interval: interval,
                        ride: 'carousel',
                        wrap: false
                    });
            } else {
                carousel = new bootstrap.Carousel('#albumCarousel',
                    {
                        ride: 'false',
                        wrap: false
                    });
            }
        });
</script>
</body>
</html>