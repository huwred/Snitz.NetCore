@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using SnitzCore.Data.Models
@model IQueryable<IGrouping<string, LanguageResource>>
@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    ViewBag.Title = "Translation Manager";
    Layout = "_MasterLayout";
    var cultureItems = LocOptions.Value.SupportedUICultures!
        .Select(c => new SelectListItem { Value = c.TwoLetterISOLanguageName, Text = c.DisplayName })
        .ToList();
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    string clang = requestCulture?.RequestCulture.Culture.Name!;
    string[] cultures = LocOptions.Value.SupportedUICultures!.Select(r => r.TwoLetterISOLanguageName).ToArray();
    var rowcount = 0;
}
@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.4/css/dataTables.dataTables.css">
    <style>
        div.dt-container {
            width: 99%;
            margin: 0 auto;
        }
        div.dt-container select.dt-input {
            margin-right: 4px;
        }

        td {
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }

        .table {
            table-layout: fixed;
        }
    </style>
}
<div class="p-3">
<div class="container-fluid resource-grid p-3 rounded-3">
        <table class="table table-bordered table-striped" id="ResourceTable" width="100%">
        <thead>
            <tr>
                <th>Set</th>
                <th></th>
                <th>Resource Name</th>
                @foreach (var culture in cultureItems)
                {
                    <th>@culture.Text</th>
                }
                <th></th>
            </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    @foreach (var culture in cultureItems)
                    {
                        <td></td>
                    }
                    <td></td>
                </tr>
        </thead>
        <tbody>
            @foreach (var group in Model)
            {
                <tr data-row="@rowcount">
                        <td>@group.First().ResourceSet</td>
                        <td>@String.Join(",", cultures)</td>
                        <td>@group.Key</td>
                        @foreach (var culture in cultureItems)
                        {
                            LanguageResource? res = group.SingleOrDefault(c => c.Culture == culture.Value);
                            var nowrap = "no-sort";
                            @if (culture.Value == "en"){
                               nowrap = "";
                            }
                            <td dir="auto" class="@nowrap" title="@res?.Value">
                                @if (group.Select(c => c.Culture == culture.Value).Any())
                                {
                                    if (res != null)
                                    {
                                        @Html.Raw(res.Value)
                                    }
                                }
                            </td>
                        }
                    <td><button class="btn btn-primary"><i class="fa fa-edit"></i></button></td>
                </tr>
                rowcount += 1;
            }
        </tbody>
        <tfoot>
            <tr>
                <th>Resource Id</th>
                <th></th>
                <th>ResourceSet</th>
                    @foreach (var culture in cultureItems)
                    {
                        <th>@culture.Text</th>
                    }
                <th></th>
            </tr>
        </tfoot>
    </table>
    </div>
</div>
<div id='modal-resedit' class='modal fade in' aria-labelledby="resLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" aria-hidden="true">&times; </button>
                <h4 class="modal-title" id="pmLabel">Edit Resource</h4>
            </div>
            <div id='resContainer' class="modal-body">
                <div class="container text-center">
                    <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript" src="~/js/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/2.1.4/js/dataTables.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/fixedcolumns/5.0.1/js/dataTables.fixedColumns.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/fixedcolumns/5.0.1/js/fixedColumns.dataTables.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/plug-ins/2.1.4/dataRender/ellipsis.js"></script>
    <script>
        var table;
        Object.assign(DataTable.defaults, {
            pageLength: 10,
            //scrollX:true,
            //fixedColumns: true,
        });
        table = new DataTable('#ResourceTable',{
            autoWidth: true,
            orderCellsTop: true,
            initComplete: function () {
                this.api()
                    .columns([0])
                    .every(function () {
                        let column = this;
                        var select = $('<select><option value=""></option></select>')
                            .appendTo($("thead tr:eq(1) td").eq(this.index()))
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
            },
            columnDefs: [
                {
                    targets: [1],
                    visible: false
                }
            ],

        });
        $('#ResourceTable tbody').on('click', 'button', function (evt) {

            evt.preventDefault();
            var data = table.row($(this).parents('tr')).data();
            var rownum = $(this).parents('tr').data("row");
            //console.log(JSON.stringify({ id: rownum, rowData: data }));
            //var jsondata = JSON.stringify(data);
            //$('#ResourceTable tbody').off('click', 'button');
            let formData = {
                id: rownum,
                rowData: data
            }
            $.ajax
                ({
                    type: "POST",
                    url: SnitzVars.baseUrl + "/LanguageManager/EditRow/",
                    data: formData,
                    success: function (data) {
                        $("#resContainer").html(data);
                        $('#modal-resedit').modal('show');
                        return false;
                    },
                    error: function (x, e) {
                        console.log(x.ResponseText);
                        console.log(e);
                        alert('Failed');
                    }
                });
            return false;
        });
        window.onload = function () {
            //keep the language tab active
            $("#admin-nav li a.nav-link.active").removeClass("active");
            $("#lang-settings").addClass("active");
            //table.reload();
        }

        completed = function (xhr) {
            $('#modal-resedit').modal('hide');
            location.reload();
            console.log(xhr.responseText);
        };
    </script>
}