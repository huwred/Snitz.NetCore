@model SnitzCore.BackOffice.ViewModels.SubscriptionsViewModel  
@using SnitzCore.BackOffice.TagHelpers  
@using SnitzCore.Data.Models  
@using Microsoft.AspNetCore.Mvc.TagHelpers  
@using System.Diagnostics.Metrics  
@{  
    Layout = null;  
    int sublevel = SnitzConfig.GetIntValue("STRSUBSCRIPTION");
    SubscriptionLevel test = (SubscriptionLevel)sublevel;
}  
<h4>Highest level of Subscription: @test</h4>  

@{  
    var subscriptions = Html.GetEnumSelectList<SubscriptionLevel>().Where(s => Convert.ToInt32(s.Value) >= SnitzConfig.GetIntValue("STRSUBSCRIPTION"));  
}  
<form asp-action="ManageSubscriptions" method="post" data-ajax="true" data-ajax-update="#member-subscriptions" id="manage-subs">  
    <div class="input-group mb-3">  
        <span class="input-group-text">Show Subscriptions for</span>  
        <select asp-for="Filter" id="filter-subs" asp-items="subscriptions" class="form-select">  
            <option value="0">All</option>  
        </select>  
        <button class="btn btn-outline-danger" id="filter-subs-btn" title="Delete All subscriptions" type="button" data-toggle="tooltip"><i class="fa fa-trash fa-2x"></i></button>  
    </div>  
    @if (Model.Subscriptions != null && Model.Subscriptions.Any())  
    {  
        <table class="table" id="subs-table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">Id</th>
                    <th scope="col">Member</th>
                    <th scope="col">Category</th>
                    <th scope="col">Forum</th>
                    <th scope="col">Topic</th>
                </tr>
            </thead>
            <tbody>
                @foreach (dynamic sub in Model.Subscriptions!)
                {
                    <tr>
                        <td></td>
                        <td>@sub.SubscriptionId</td>
                        <td>@sub.MemberName</td>
                        <td>@sub.CategoryName</td>
                        <td>@sub.ForumName</td>
                        <td>@sub.Topic</td>
                    </tr>
                }
            </tbody>
        </table>

    }  
    else  
    {  
        <label class="h5 center">No Subscriptions</label>  
    }  

</form>
<script>
    ///
    var subsTable = new DataTable('#subs-table',{
        columnDefs: [
            {
                orderable: false,
                render: DataTable.render.select('1', () => 'SubscriptionId'),
                title: '<button class="btn btn-link delete-subs disabled" title="Delete Selected subscriptions" type="button" data-toggle="tooltip"><i class="fa fa-trash-can fs-5"></i></button>',
                targets: 0,
                width:20
            },
            {//hide the id column
                target: 1,
                visible: false
            },
        ],
        select: {
            style: 'os',
            selector: 'td:first-child',
        },
        order: [[2, 'asc']]
    });
    subsTable.on("click", "th.dt-select-checkbox", function() {
        if ($("th.dt-select-checkbox").hasClass("selected")) {
            subsTable.rows().deselect();
            $("th.dt-select-checkbox").removeClass("selected");
            $('.delete-subs').removeClass('disabled');
            $('.delete-subs').addClass('disabled');
        } else {
            subsTable.rows().select();
            $('.delete-subs').removeClass('disabled');
            $("th.dt-select-checkbox").addClass("selected");
        }
    }).on("select deselect", function() {
        ("Some selection or deselection going on")
        if (subsTable.rows({
                selected: true
            }).count() !== subsTable.rows().count()) {
            $("th.dt-select-checkbox").removeClass("selected");
            $('.delete-subs').removeClass('disabled');
            $('.delete-subs').addClass('disabled');
        } else {
            $("th.dt-select-checkbox").addClass("selected");
            $('.delete-subs').removeClass('disabled');
        }
    });
</script>