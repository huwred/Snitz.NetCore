@model MVCForum.ViewModels.Forum.ForumTopicModel
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Identity
@using Snitz.PostThanks.Helpers
@using SnitzCore.Service.TagHelpers
@using Microsoft.AspNetCore.Http
@using Snitz.Events.Helpers
@inject IEnumerable<ISnitzStartupService> pluginservices
@section MetaData
{
    <meta name="title" content="Forum: @Model.Forum?.Title" />
    <meta name="description" content="@Model.Forum?.Description" />
    <meta name="robots" content="index,nofollow" />
    @if (SnitzConfig.GetIntValue("INTFORUMRSS") == 1)
    {
        <link rel="alternate" type="application/rss+xml" title="RSS" href="~/rssfeed/forum/@Model.Forum?.Id">      
    }
}
@section Styles{
    
    <link href="~/css/star-rating.min.css" rel="stylesheet" />
    <link href="~/css/krajee-svg/theme.css" media="all" rel="stylesheet" type="text/css"/>
    <link href="@SnitzConfig.ThemeCss("tag_cloud.css")" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/prism.min.css">
    @if (ViewBag.RequireAuth)
    {
        <style>
            .modal-backdrop
            {
                opacity:1.0 !important;
            }
            .modal-backdrop.in {
                    opacity: 1.0 !important;
                }
        </style>
    }
}
@{
    var auth = (bool)ViewBag.RequireAuth;
    TempData["ForumId"] = Model.Forum.Id;
    TempData["CatId"] = 0;
    var eventservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(CalEventsService));
    var thanksservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(PostThanksService));
    if(thanksservice != null)
    {
        TempData["allowThanks"] = thanksservice.EnabledForTopic(Model.Forum.Id);
    }
    ViewBag.PageCount = Model.PageCount;
    var pagenum = Model.PageNum?.ToString() ??  Context.Request.Query["page"];
    var pagesize = Context.Session.GetInt32("TopicPageSize");
    ViewBag.PageSize = pagesize ?? Model.PageSize;
    ViewBag.PageNum = pagenum;
    if (Model.AccessDenied)
    {
        if (!SignInManager.IsSignedIn(User))
        {
            <div class="container">
                <h3>You do not have access to this forum, please try <a href="~/Account/Login">logging in</a> first</h3>
            </div>
        }
        else
        {
            <div class="container">
                <h3>You do not have access to this forum</h3>
            </div>
        }
        return;
    }
    if (Model.PasswordRequired && !User.IsInRole("Administrator"))
    {
        <div class="container">
            <h2>This Forum needs a password</h2>
        </div>
        return;
    }
    var subscriptions = MemberService.Current()?.Subscriptions;
}
@if (!auth)
{
    <div class="pt-0" id="forum-index">
        <snitz-breadcrumb show-filter="true"></snitz-breadcrumb>
        <div class="collapse" id="showFilters">
            <div class="d-flex bd-highlight  m-1">
                <div class="d-flex bd-highlight">
                    <form id="defaultdays-form" asp-action="Index" class="form-inline" method="get">
                        <input type="number" value="@Model.Forum?.Id" name="id" style="display: none;" />
                        <input type="number" value="@pagenum" name="page" style="display: none;" />
                        <input type="number" value="0" name="defaultdays" id="hdndefaultdays" style="display: none;" />
                        <div class="input-group forum ">
                            <enum-select snitz-if="@(!Model.Archives)" id="default-days" enum-type="typeof(DefaultDays)" selected-value="(int)Model.Forum.DefaultView" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></enum-select>
                            <select name="OrderBy" id="orderby" class="form-select mb-2" title="Order by" aria-invalid="false">
                                <option value="pd" selected-val="@Model.Forum?.OrderBy">@Localizer["optPostDate"]</option>
                                <option value="lpd" selected-val="@Model.Forum?.OrderBy">@Localizer["optLastPostDate"]</option>
                                <option value="a" selected-val="@Model.Forum?.OrderBy">@Localizer["optAuthor"]</option>
                                <option value="lpa" selected-val="@Model.Forum?.OrderBy">@Localizer["optLastAuthor"]</option>
                                <option value="v" selected-val="@Model.Forum?.OrderBy">@Localizer["optViews"]</option>
                                <option value="r" selected-val="@Model.Forum?.OrderBy">@Localizer["optReplies"]</option>
                            </select>
                            <select name="sortdir" id="sortdir" class="form-select mb-2" title="Sort direction" aria-invalid="false">
                                <option value="asc" selected-val="@Model.Forum?.SortDir">@Localizer["optAsc"]</option>
                                <option value="des" selected-val="@Model.Forum?.SortDir">@Localizer["optDesc"]</option>
                            </select>
                            <span class="form-text mb-2 d-none d-sm-block">&nbsp;@Localizer["lblPageSize"]&nbsp;</span>
                            <div class="input-group-addon">
                            <div snitz-if="@(SnitzConfig.GetValueWithDefault("STRFORUMPAGESIZES", "") != "")" class="radioBtn btn-group d-none d-sm-block" role="group" aria-label="Select page size" title="Select page size">
                                @{
                                    var ischecked = Model.PageSize;
                                    foreach (var size in SnitzConfig.GetValueWithDefault("STRFORUMPAGESIZES", "").Split(","))
                                    {
                                        <input type="radio" class="btn-check" name="pagesize" id="option_@size" autocomplete="off" value="@size" @if (ischecked == Convert.ToInt32(size)){@Html.Raw("checked")}/>
                                        <label class="btn btn-outline-secondary mb-2" for="option_@size">@size</label>
                                    }
                                }
                            </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="d-flex bd-highlight  m-1">
                <div class="flex-fill">
                    <partial name="QuickSearch" />
                </div>
            </div>
        </div>
        <div class="d-flex bd-highlight  m-1">
            <div class="flex-fill w-50">
                <form asp-action="Index" class="form-inline" method="get">
                    <div class="input-group">
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <button snitz-if="@Model.Forum?.Status == 1" asp-controller="Topic" asp-action="Create" asp-route-id="@Model.Forum?.Id" class="btn btn-outline-primary"><i class="fa fa-commenting-o"></i><span class="d-none d-lg-inline"> @Localizer["btnNewTopic"]</span></button>
                            if (SnitzConfig.GetIntValue("INTPOLLS") == 1 && Model.Forum.Polls != (int)PollAuth.Disallow)
                            {
                                if ((Model.Forum.Polls == (int)PollAuth.Members) || (Model.Forum.Polls == (int)PollAuth.AdminModerators && User.IsInRole("Forum_" + Model.Forum.Id)) || User.IsInRole("Administrator"))
                                {
                                    <a class="btn btn-outline-primary" title="@Localizer["tipAddPoll"]" data-toggle="tooltip" href="@Url.Action("Create", "Topic", new { id = Model.Forum.Id, ispoll = true })">
                                        <i class="fa fa-bar-chart"></i> <span class="d-none d-lg-inline"> @Localizer["btnAddPoll"]</span>
                                    </a>
                                }
                            }
                            if (SnitzConfig.GetIntValue("INTCALEVENTS", 0) == 1)
                            {
                                int authlevel = eventservice.AuthLevel(Model.Forum.Id);
                                if ((authlevel == 2 || authlevel == 3 && (User.IsInRole("Administrator") || User.IsInRole("Moderator"))) || authlevel == 4 && User.IsInRole("Administrator"))
                                {
                                    <a class="btn btn-outline-primary" title="@Localizer["tipAddEvent"]" data-toggle="tooltip" href="@Url.Action("Create", "Topic", new { id = Model.Forum.Id, isevent = true })">
                                        <i class="fa fa-calendar-plus-o"></i> <span class="d-none d-lg-inline"> @Localizer["btnAddEvent"]</span>
                                    </a>
                                }
                            }
                        }  
                        @if (SnitzConfig.GetIntValue("INTFORUMRSS") == 1)
                        {
                            <a class="btn btn-outline-primary" title="@Localizer["tipForumRss"]" data-toggle="tooltip" href="@Url.Action("Forum", "RssFeed", new { id = Model.Forum.Id })">
                                <i class="fa fa-rss"></i> <span class="d-none d-lg-inline"> @Localizer["tipForumRss"]</span>
                            </a>
                        }
                        @if (User.IsInRole("Administrator"))
                        {
                            <button asp-controller="Forum" asp-action="Edit" asp-route-id="@Model.Forum!.Id" aria-label="Edit Forum" class="btn btn-outline-warning"><i class="fa fa-pencil"></i><span class="d-none d-lg-inline"> @Localizer["tipEditForum"]</span></button>
                            <button-confirm selector="confirm-delete" config-class="fa fa-trash" config-key="@Model.Forum!.Id" href="@SnitzConfig.RootFolder/Forum/Delete/?id=" title="@Localizer["cnfDeleteForum"].Value"></button-confirm>
                        }
                    </div>
                </form>
            </div>
        </div>
        <!--Display posts table-->
        <div class="row">
            <div class="col">
                <div class="posts-table">
                    <div class="table-head">
                        <div class="status rounded-2">
                            @if (!Model.Archives && User.Identity.IsAuthenticated && Model.Forum.ForumSubscription == ForumSubscription.ForumSubscription && SnitzConfig.GetIntValue("STRSUBSCRIPTION", 0) != 0)
                            {
                                if (subscriptions != null && subscriptions.Where(s => s.ForumId == Model.Forum.Id && s.PostId == 0).Select(s => s.ForumId).Any())
                                {
                                    <i class="fa fa-share-square forum center" title="@Localizer["btnUnsubscribe"]" data-id="@Model.Forum.Id"></i>
                                }
                                else
                                {
                                    <i class="fa fa-share-square-o forum center " title="@Localizer["cnfSubscribeForum"]" data-id="@Model.Forum.Id"></i>
                                }
                            }
                        </div>
                        <div class="subjects rounded-2">@Localizer["lblSubject"]</div>
                        <div class="replies rounded-2"></div>
                        <div class="last-reply rounded-2">@Localizer["lblLastPost"]</div>
                        <div class="subscribe rounded-1 d-none d-md-inline-block"><i class="fa fa-object-group" title="@Localizer["tipMergeTopic"]" style="display: none;"></i></div>
                    </div>
                    @{
                        ViewData["ActiveTopics"] = false;
                        ViewData["Archives"] = Model.Archives;
                    }
                    <!--Sticky Topics-->
                    @if (Model.StickyPosts!.Any())
                    {
                        if (Model.StickyPosts != null)
                        {
                            foreach (var post in Model.StickyPosts)
                            {
                                <partial name="TopicListing" model="post" view-data="ViewData" />
                            }
                        }
                        <hr />
                    }
                    <!--Topics start here-->
                    @foreach (var post in Model.Posts!){
                        <partial name="TopicListing" model="post" view-data="ViewData" />
                    }
                    @if (Model.Forum.Topics == 0)
                    {
                        <p class="text-center p-4">@Localizer["lblNoForumTopics"]</p>
                    }else if (Model.Posts == null || Model.Posts?.Count() == 0)
                    {
                        <p class="text-center p-4">@Localizer["lblNoTopicsToDisplay"]</p>
                    }
                    <!--ends here-->

                </div>
                <!--Pagination starts-->
                <partial snitz-if="@(Model.PageCount > 1)" 
                         name="ListPaging" 
                         model="@(new PagingModel
                                {
                                    PageCount = Model.PageCount,
                                    Page = pagenum != null ? Convert.ToInt32(pagenum) : 1,
                                    PageSize = ViewBag.PageSize,
                                    OrderBy = Model.Forum!.OrderBy,
                                    SortDir = Model.Forum.SortDir,
                                    DefaultDays = (int)Model.Forum.DefaultView
                                })" />
                <!--pagination ends-->
                @await Component.InvokeAsync("Members", new { template = "CategoryForumJumpTo"})
                <partial name="IconInfo" />
            </div>


        </div>

    </div>
}

@{
    var confModel = new ConfirmDialogViewModel()
    {
        Title = Localizer["popDelForumTitle"].Value, //"Delete Forum",
        Message = Localizer["popDelForumMessage",Model.Forum!.Title!].Value /* $@"<p>You are about to delete the Forum {Model.Forum!.Title}</p>        <p>Do you wish to proceed?</p>" */
    };
    <partial name="ConfirmDialog" model="@confModel" />
}
<input type="text" style="display: none;" id="req-auth" value="@ViewBag.RequireAuth.ToString()" />
<input type="text" style="display: none;" id="req-forumid" value="@Model.Forum.Id" />
<partial name="PasswordDlg" model='new ConfirmDialogViewModel(){Title=Localizer["popPasswordRqdTitle"].Value,Message = Localizer["popPasswordRqdMessage"].Value}' />
@section Scripts {
    <script type="text/javascript" src="~/js/prism.min.js" data-manual></script>
<script src="~/js/star-rating.min.js"></script>
<script src="~/js/krajee-svg/theme.js" type="text/javascript"></script>
<renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
<script type="text/javascript" src="~/js/postcontroller.min.js" asp-append-version="true"></script>
<script type="text/javascript">
    $(window).on("load",
        function(e) {
            $('.rb-rating').rating({
                'showCaption': false,
                'displayOnly':true
            });
        });
    $(document).on("change",
        "#default-days",
        function() {
            $("#hdndefaultdays").val($(this).val());
            $("#defaultdays-form").submit();
        });
    $(document).on("change",
        "#orderby",
        function() {
            $("#hdndefaultdays").val($("#default-days").val());
            $("#defaultdays-form").submit();
        });
    $(document).on("change",
        "input[type=radio][name=pagesize]",
        function() {
            $("#defaultdays-form").submit();
        });
    $(document).on("change",
        "#sortdir",
        function() {
            $("#hdndefaultdays").val($("#default-days").val());
            $("#defaultdays-form").submit();
        });
        Prism.hooks.add("before-highlight",
        function(env) {
            env.code = env.element.innerText;
        });

    code = document.getElementsByTagName('code');
    Array.from(code).forEach(el => { Prism.highlightElement(el) });
</script>
<renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
<renderstoredcontent asp-key="topic-post-controls"></renderstoredcontent>

}