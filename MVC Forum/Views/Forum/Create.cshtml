@using Microsoft.AspNetCore.Mvc.TagHelpers

@using SmartBreadcrumbs
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@using SnitzCore.Service.TagHelpers
@using Microsoft.AspNetCore.Identity
@model MVCForum.ViewModels.Forum.NewForumModel
@{
    var toplevelsubs = Model.CategorySubs;
}
<div class="container pt-0">
    <snitz-breadcrumb></snitz-breadcrumb>
    <div class="row bg-form p-4 rounded">
        <div class="col-7">
            <form asp-action="Create" method="post" id="addForumForm" class="needs-validation " novalidate>
                <div class="mb-3 row">
                    <div class="col-10 col-lg-4">
                        <div class="form-check form-switch mb-3">
                            <input type="checkbox" role="switch" name="Status" id="Status" value="1" class="form-check-input" checked="@(Model.Status == 1)" style="transform: scale(1.4);">
                            <input type="checkbox" name="Status" value="0" checked="@(Model.Status != 1)" style="display:none">
                            <label class="form-check-label" id="Status-lbl" asp-for="Status"> <span snitz-if="@(Model.Status == 1)">@Localizer["Active"]</span><span snitz-if="@(Model.Status != 1)">@Localizer["Locked"]</span></label>
                        </div>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="Category" class="form-label col-2">@Localizer["forumCategory"]</label>
                    <div class="col-10 col-lg-4">
                        @Html.DropDownListFor(m => m.Category, // Store selected value in Model.State
                                 new SelectList(Model.CategoryList, "Key", "Value"),
                                 "- Please select a category -", new { @class = "form-control" })
                        <div class="invalid-feedback">You must select a Category.</div>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="Type" class="form-label col-2">@Localizer["forumType"]</label>
                    <div class="col-10 col-lg-4">
                        <enum-select name="Type" enum-type="typeof(ForumType)" selected-value="@(int)Model.Type" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="Subject" class="form-label col-2">@Localizer["forumSubject"]</label>
                    <div class="col-6">
                        <input asp-for="Subject" class="form-control" />
                        <div class="invalid-feedback">You must provide a subject.</div>
                    </div>
                </div>
                <div class="mb-3 row">
                    <div class="col-12 col-lg-2">
                    </div>
                    <div class="col-10">
                        <textarea asp-for="Description" class="form-control" id="msg-text" rows="6" required="required"></textarea>
                        <input asp-for="Id" type="hidden" />
                        <div class="invalid-feedback">You must enter a description.</div>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="Order" class="form-label col-2">@Localizer["forumOrder"]</label>
                    <div class="col-3 col-lg-2">
                        <input asp-for="Order" class="form-control" />
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="DefaultView" class="form-label col-2">@Localizer["forumView"]</label>
                    <div class="col-10 col-lg-6">
                        <enum-select name="DefaultView" enum-type="typeof(DefaultDays)" selected-value="(int)Model.DefaultView" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="AuthType" class="form-label col-2">@Localizer["forumAuthType"]</label>
                    <div class="col-10 col-lg-5">
                        <enum-select name="AuthType" id="authtype" enum-type="typeof(ForumAuthType)" selected-value="(int)Model.AuthType" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>
                <div class="mb-3 row" id="req-password" style="display:none">
                    <label asp-for="NewPassword" class="form-label col-2">@Localizer["Password"]</label>
                    <div class="col-10 col-lg-6">
                        <input name="NewPassword" type="password" class="form-control" value="@Model.NewPassword" />
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="PostAuth" class="form-label col-2">@Localizer["PostAuth"]</label>
                    <div class="col-10 col-lg-5">
                        <enum-select name="PostAuth" id="post-auth" enum-type="typeof(PostAuthType)" selected-value="(int)Model.PostAuth" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="ReplyAuth" class="form-label col-2">@Localizer["ReplyAuth"]</label>
                    <div class="col-10 col-lg-5">
                        <enum-select name="ReplyAuth" id="reply-auth" enum-type="typeof(PostAuthType)" selected-value="(int)Model.ReplyAuth" text-localizer-delegate="delegate (string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>
                <div snitz-if="@(SnitzConfig.IsEnabled("INTTOPICRATING"))" class="mb-3 row">
                    <label asp-for="AllowTopicRating" class="form-label col-2">@Localizer["forumAllowRating"]</label>
                    <div class="col-10 col-lg-5">
                        <div class="form-check form-switch mb-3">
                            <input type="checkbox" role="switch" name="AllowTopicRating" id="AllowTopicRating" value="1" class="form-check-input" checked="@(Model.AllowTopicRating == 1)" style="transform: scale(1.4);">
                            <input type="checkbox" name="AllowTopicRating" value="0" checked="@(Model.AllowTopicRating != 1)" style="display:none">
                        </div>
                    </div>
                </div>
                <div snitz-if="@(SnitzConfig.IsEnabled("STRMODERATION"))" class="mb-3 row">
                    <label asp-for="Moderation" class="form-label col-2">@Localizer["forumModeration"]</label>
                    <div class="col-10 col-lg-5">
                        <enum-select name="Moderation" enum-type="typeof(Moderation)" selected-value="(int)Model.Moderation" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>
                <div snitz-if="@(toplevelsubs == null || (CategorySubscription)toplevelsubs != CategorySubscription.None)" class="mb-3 row">
                    <label asp-for="Subscription" class="form-label col-2">@Localizer["forumSubscription"]</label>
                    <div class="col-10 col-lg-6">
                        <enum-select name="Subscription" enum-min="@Model.CategorySubs" enum-type="typeof(ForumSubscription)" selected-value="(int)Model.Subscription" text-localizer-delegate="delegate (string s) { return Localizer[s].Value; }"></enum-select>
                    </div>
                </div>

                <div class="mb-3 form-check">
                    @Html.CheckBoxFor(m => m.IncrementMemberPosts, new { @class = "form-check-input" })
                    <label asp-for="IncrementMemberPosts" class="form-check-label">@Localizer["forumPostCount"]</label>
                </div>
                @if (Model.Id > 0)
                {
                    <div class="mb-3 row">
                        <label class="form-label col-4">Delete all posts in the Forum</label>
                        <div class="col-6 col-lg-3">
                            <button-confirm selector="confirm-delete" config-class="fa fa-trash" config-key="@Model.Id" href="~/Forum/EmptyForum/?id=" title="Empty Forum"></button-confirm>
                        </div>
                    </div>
                }
                <input name="ForumId" style="display: none;" value="@Model.ForumId" />
                <partial name="FormButtons" />
            </form>
        </div>
        <div class="col-5">
            <fieldset>
                <div class="card" id="allowed-members">
                    <div class="card-header">@Localizer["forumAllowed"]</div>
                    @if (Model.ForumId == 0)
                    {
                        <div class="card-body p-2 text-warning text-center">
                            <p>Forum needs to be saved before Members can be configured</p>
                        </div>
                    }
                    else
                    {
                        <div class="card-body p-2">
                            <div class="mb-3">
                                <form asp-controller="Forum" asp-action="RemoveAllowed" method="post" id="rem-allowedform">
                                    <select class="form-control mb-3" id="AllowedMembers" multiple="multiple" name="AllowedMembers">
                                        @foreach (var member in Model.AllowedMembers!)
                                        {
                                            <option value="@member.Key">@member.Value</option>
                                        }
                                    </select>
                                    <input type="hidden" name="ForumId" value="@Model.ForumId" />
                                    <button type="button" id="rem-allowed" class="btn btn-danger btn-sm" title="Remove member"><i class="fa fa-minus"></i> Remove member</button>
                                </form>
                            </div>
                        </div>
                        <div class="card-footer">
                            <form asp-controller="Forum" asp-action="AddAllowed" method="post" id="add-allowedform">
                                <input type="hidden" name="ForumId" value="@Model.ForumId" />
                                <label class="form-label">Add member</label>
                                <div class="mb-3">
                                    <input name="NewMember" id="new-allowed" type="text" placeholder="Type username to find member" class="form-control ltr ui-autocomplete-input" data-autocomplete-url="/Forum/AutoCompleteUsername" autocomplete="off">
                                </div>
                                <button type="button" id="add-allowed" class="btn btn-success btn-sm" title="Add member"><i class="fa fa-plus"></i> Add Member</button>
                            </form>
                        </div>
                    }
                </div>
            </fieldset>
            @if (SnitzConfig.IsEnabled("INTPOLLS") || SnitzConfig.IsEnabled("INTCALEVENTS") || SnitzConfig.IsEnabled("STRTHANKS"))
            {
                <fieldset>
                    <legend>Plugins</legend>
                    @if (Model.ForumId == 0)
                    {
                        <h5 class="text-warning text-center">The Forum needs to be saved before plugins can be configured</h5>
                    }
                    else
                    {
                        @await Component.InvokeAsync("Events",      new { template = "ForumConfig", id = Model.ForumId, topicid = 0 })
                        @await Component.InvokeAsync("Polls",       new { template = "ForumConfig", forumid = Model.ForumId })
                        @await Component.InvokeAsync("PostThanks",  new { template = "ForumConfig", id = Model.ForumId, topicid = 0 })
                    }
                </fieldset>                
            }
        </div>
    </div>
</div>

@section Scripts
{

    <script type="text/javascript" src="~/js/tinymce/tinymce.min.js"></script>
    <script type="text/javascript" src="~/js/initPostForm.js"></script>
    <renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
    <script type="text/javascript">
        $(document).on("change","#Status",function(){
          if (this.checked) {

            $(this).nextAll('.form-check-label:first').text(' Active');
          } else {
            $(this).nextAll('.form-check-label:first').text(' Locked');
          }
        });

        $(document).on('click','.confirm-delete', function(e) {
            e.preventDefault();
            var id = $(this).data('id');
            var href = $(this).attr('href');
            (async () => {
                const result = await b_confirm(Snitzres.cnfEmptyForum)
                if (result) {
                    $.get(href.replace("~", SnitzVars.baseUrl) + id, function(result){
                        window.location.replace(result.redirectToUrl);
                    });
                }
            })();
        });

        $(document).ready(function() {
            var selected = $('#authtype').find(":selected").val();
            if (selected == 2 || selected == 3 || selected == 7) {
                $('#req-password').show();
            }
        });
        $('#authtype').on('change',function() {
            //alert(this.value);
            if (this.value == 2 || this.value == 3 || this.value == 7) {
                $('#req-password').show();
            } else {
                $('#req-password').hide();
            }
        });
        $('#add-allowed').on('click', function(e) {
            e.preventDefault();
            var form = $('#add-allowedform');
            var actionUrl = form.attr('action');
    
            $.ajax({
                type: "POST",
                url: actionUrl,
                data: form.serialize(),
                success: function(data)
                {
                    if (data.error) {
                        appendAlert(data.error, 'error');
                        return false;
                    }
                    if (data.id !== 0) { // append the new item to select box.
                        $("#AllowedMembers").append(new Option(data.name, data.id));
                    }
                }
            });
        });
        $('#rem-allowed').on('click', function(e) {
            e.preventDefault();
            var form = $('#rem-allowedform');
            var actionUrl = form.attr('action');
            var selectedVal = $('#AllowedMembers').find(":selected").val();
            var selectedName = $('#AllowedMembers').find(":selected").text();
            $.ajax({
                type: "POST",
                url: actionUrl,
                data: form.serialize(),
                success: function (data) {
                    if (data.error) {
                        appendAlert(data.error, 'error');
                        return false;
                    }
                    if (data.id) { //remove the value from select list
                        $("#AllowedMembers option[value='" + data.id + "']").remove();
                    }

                }
            });
        });
    </script>
    <renderstoredcontent asp-key="forum-plugins"></renderstoredcontent>
}
