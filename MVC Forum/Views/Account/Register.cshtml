@using SnitzCore.Data.Interfaces
@using SnitzCore.Data.Models
@using System.Reflection
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SnitzCore.Data.Extensions
@using MVCForum.TagHelpers
@model MVCForum.Models.User.UserCreateModel
@inject ISnitzConfig Config
@{
    var requiredFields = Config.GetRequiredMemberFields();
}
@section Styles
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/css/bootstrap-datepicker3.min.css">
}
<form asp-controller="Account" asp-action="Register" class="needs-validation p-2" novalidate>
    <div class="row pt-0">
    <div class="center m-2 ">
        <div class="subforum col-6 p-2 bg-form border border-dark rounded">
            <h1 class="bg-dark text-white p-2">Forum Account Registration</h1>
            <div class="mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control" required="required" />
                    <div class="invalid-feedback">You must provide a Username.</div>
                </div>
                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" required="required" />
                    <div class="invalid-feedback">You must provide an Email address.</div>
                </div>
                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", required="required" })
                    <div class="invalid-feedback">You must provide a password.</div>

                    <label for="pwRepeat" class="form-label">Confirm Password</label>
                    <input type="password" name="pwRepeat" id="pwRepeat" class="form-control" />
                    <div class="invalid-feedback">Passwords do not match.</div>
                </div>
        </div>
    </div>
</div>
<div class="row pt-0">
    <div class="center m-2 ">
        <div class="subforum col-6 p-2 bg-form border border-dark rounded">
            <h1 class="bg-dark text-white p-2">Required Details</h1>
            @foreach (var field in requiredFields)
            {
                var fieldname = field.Replace("STRREQ", "STR");
                @foreach (PropertyInfo property in typeof(Member).GetProperties().Where(p => !p.SystemProperty() && p.GetPropertyDisplayCheck<Member>() == fieldname).OrderBy(p => p.PropertyOrder()))
                {
                    <snitz-config can-edit="true" property-info="@property" property-val="" property-req="true"></snitz-config>
                }
            }
            <div class="mb-3">
                <a asp-controller="Forum" asp-action="Index" class="btn btn-danger">Cancel</a>
                <button name="submit" type="submit" class="btn btn-primary">Register</button>
            </div>
        </div>
    </div>
</div>
</form>
@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js"></script>
    <script>
        // Disable form submissions if there are invalid fields
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                // Get the forms we want to add validation styles to
                var forms = document.getElementsByClassName('needs-validation');

                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        var pw = document.getElementById('Password').value; // $('#pw').val();
                        var pwRepeat = document.getElementById('pwRepeat');
                        if(pwRepeat.value !== pw) {
                            // set cell border color to red and show error icon for invalid input
                            document.getElementById('pwRepeat').classList.add("is-invalid");
                        }
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }

                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
    <script>

        $(function () {
            $('.datepicker').datepicker({
                autoclose: true,
                format: {
                    /*
                     * Say our UI should display a week ahead,
                     * but textbox should store the actual date.
                     * This is useful if we need UI to select local dates,
                     * but store in UTC
                     */

                    toDisplay: function (date, format, language) {
                        var d = new Date(date);
                        d.setDate(d.getDate());
                        return d.toLocaleDateString();
                    },
                    toValue: function (date, format, language) {
                        let re = /([0-9]{4})([0-9]{2})([0-9]{2})/;
                        let lastFirst = date.replace(re, '$1-$2-$3');
                        var d = new Date(lastFirst);
                        d.setDate(d.getDate());
                        return new Date(d);
                    }
                }
            });

            revalidate();
        });
        function revalidate() {
            var container = document.getElementById("member-profile");
            var forms = container.getElementsByTagName("form");
            var newForm = forms[forms.length - 1];
            $.validator.unobtrusive.parse(newForm);
        }
        // Add the following code if you want the name of the file appear on select
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });

        //$('#one').replaceWith("<label>" + $('#one').val() + "</label>");
    </script>
}
