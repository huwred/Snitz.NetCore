@using System.Reflection
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SnitzCore.Data.Extensions
@using MVCForum.TagHelpers
@model MVCForum.ViewModels.User.UserCreateModel
@if (SnitzConfig.GetIntValue("STRPROHIBITNEWMEMBERS") == 1)
{
    <div class="container pt-0">
        <div class="center">
            <h2>@Localizer["regNotEnabled"]</h2>
        </div>
    </div>
}
else
{
    @section Styles
    {
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/css/bootstrap-datepicker3.min.css">
    }

    <form asp-controller="Account" asp-action="Register" class="needs-validation p-2" novalidate>
        <div class="row pt-0">
            <div class="center m-2 ">
                <div class="subforum col-6 p-2 bg-form border border-dark rounded">
                    <h1 class="bg-dark text-white p-2">@Localizer["registerTitle"]</h1>
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label">@Localizer["Username"]</label>
                        <input asp-for="Name" class="form-control" required="required" />
                        <div class="invalid-feedback">@Localizer["UsernameRequired"]</div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label">@Localizer["Email"]</label>
                        <input asp-for="Email" class="form-control" required="required" />
                        <div class="invalid-feedback">@Localizer["PropertyRequired", Localizer["prompt_email_url"]]</div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Password" class="form-label">@Localizer["Password"]</label>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
                        <div class="invalid-feedback">@Localizer["dlgPasswordMsg"]</div>

                        <label for="pwRepeat" class="form-label">@Localizer["ConfirmPassword"]</label>
                        <input type="password" name="pwRepeat" id="pwRepeat" class="form-control" />
                        <div class="invalid-feedback">@Localizer["compPassword", Localizer["Password"], Localizer["ConfirmPassword"]]</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row pt-0">
            <div class="center m-2 ">
                <div class="subforum col-6 p-2 bg-form border border-dark rounded">
                    <h1 class="bg-dark text-white p-2">@Localizer["Required"]</h1>
                    @if (Model.RequiredFields != null)
                    {
                        var counter = 0;
                        foreach (var field in Model.RequiredFields)
                        {
                            var fieldname = field.Replace("STRREQ", "STR");
                            foreach (PropertyInfo property in typeof(Member).GetProperties().Where(p => !p.SystemProperty() && p.GetPropertyDisplayCheck<Member>() == fieldname).OrderBy(p => p.PropertyOrder()))
                            {
                                <snitz-config name="RequiredFields[@counter]" can-edit="true" property-info="@property" property-val="" property-req="true" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></snitz-config>
                                <input type="hidden" name="RequiredProperty[@counter]" value="@property.Name" />
                                counter++;
                            }
                        }
                    }
                    <div class="mb-3">
                        <a href="/Forums" title="Cancel user creation" class="btn btn-danger">@Localizer["btnCancel"]</a>
                        <button name="submit" type="submit" class="btn btn-primary" title="Register the user">@Localizer["btnRegister"]</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    @section Scripts
    {
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">
            // Disable form submissions if there are invalid fields
            (function() {
                'use strict';
                window.addEventListener('load', function() {
                    // Get the forms we want to add validation styles to
                    var forms = document.getElementsByClassName('needs-validation');

                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function(form) {
                        form.addEventListener('submit', function(event) {
                            var pw = document.getElementById('Password').value; // $('#pw').val();
                            var pwRepeat = document.getElementById('pwRepeat');
                            if(pwRepeat.value !== pw) {
                                // set cell border color to red and show error icon for invalid input
                                document.getElementById('pwRepeat').classList.add("is-invalid");
                            }
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }

                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();

            $(function () {
                $('.date').datepicker({
                    autoclose: true,
                    format: {
                        /*
                         * Convert to Forum datestring format,
                         */

                        toDisplay: function (date, format, language) {
                            var d = new Date(date);
                            d.setDate(d.getDate());
                            return d.toLocaleDateString();
                        },
                        toValue: function (date, format, language) {
                            let re = /([0-9]{4})([0-9]{2})([0-9]{2})/;
                            let lastFirst = date.replace(re, '$1-$2-$3');
                            var d = new Date(lastFirst);
                            d.setDate(d.getDate());
                            return new Date(d);
                        }
                    }
                });

                revalidate();
            });
            function revalidate() {
                var container = document.getElementById("member-profile");
                var forms = container.getElementsByTagName("form");
                var newForm = forms[forms.length - 1];
                $.validator.unobtrusive.parse(newForm);
            }
            // Add the following code if you want the name of the file appear on select
            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });

            //$('#one').replaceWith("<label>" + $('#one').val() + "</label>");
        </script>
    }
}



