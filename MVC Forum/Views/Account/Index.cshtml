@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MVCForum.Extensions
@using MVCForum.TagHelpers
@using Microsoft.AspNetCore.Identity
@using MVCForum.Models
@using MVCForum.Models.User
@using SnitzCore.Data
@using SnitzCore.Data.Interfaces
@using SnitzCore.Data.Models
@model MVCForum.Models.User.MemberIndexModel
@inject IMember memberService
@inject UserManager<ForumUser> UserManager
@{
    var ranking = memberService.GetRankings();
    ViewBag.PageCount = Model.PageCount;
    IList<string> userroles = null;
    if (User.Identity.IsAuthenticated)
    {
        var curruser = UserManager.GetUserAsync(User).Result;
        userroles = UserManager.GetRolesAsync(curruser).Result;
    }
    int colspan = 9;
    if (userroles != null && userroles.Contains("Admin"))
    {
        colspan = 10;
    }
    var initials = "A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z".Split(",");
}
<div class="container pt-0">
    <div class="row">
        <div class="col">
            <breadcrumb></breadcrumb>
            <form asp-action="Search" method="post" class="needs-validation" novalidate>
                <div class="input-group mb-3">
                    <select class="form-select" id="inputGroupSelect04" name="SearchIn" required="required">
                        <option value="" selected>Search in...</option>
                        <option value="1">Username</option>
                        <option value="2">Firstname</option>
                        <option value="3">Lastname</option>
                        <option value="4">Forum title</option>
                        <option value="5">Email</option>
                    </select>                        
                    <input type="text" placeholder="Search for ..." class="form-control" name="SearchFor" required="required"/>
                    <button class="btn btn-secondary" type="submit">Search</button> 
                    @if (userroles != null && userroles.Contains("Admin"))
                    {
                        <a asp-action="Register" class="btn btn-outline-secondary">Create a User</a>
                    }
                </div>
            </form>
            <div class="invalid-feedback ml-2">No values entered for search.</div>
            <table class="table table-sm table-bordered table-hover table-striped">
                <thead>
                <tr class="bg-dark">
                    <th>ID</th>
                    <th>Username</th>
                    <th>Forum title</th>
                    <th>Posts</th>
                    <th>Last post</th>
                    <th class="d-none d-md-table-cell">Member since</th>
                    <th class="d-none d-md-table-cell">Last visited</th>
                    @if (userroles != null && userroles.Contains("Admin"))
                    {
                        <th class="d-none d-md-table-cell">Email</th>
                    }
                    <th class="d-none d-md-table-cell">Country</th>
                    @if (userroles != null && userroles.Contains("Admin"))
                    {
                        <th class="d-none d-md-table-cell"></th>
                    }
                </tr>
                </thead>
                <tbody>
                @foreach (MemberListingModel member in Model.MemberList)
                {
                    <tr>
                        <td class="user-icon">
                            @{
                                var found = UserManager.FindByNameAsync(member.Member.Name).Result;
                                if (member.LastHereDate != null && member.LastHereDate > DateTime.UtcNow.AddMinutes(-15))
                                {
                                    <div class="center text-success"><snitz-status-icon status="@member.Member.Status" title="@member.Title"></snitz-status-icon></div>
                                }
                                else
                                {
                                    <div class="center"><snitz-status-icon status="@member.Member.Status" title="@member.Title"></snitz-status-icon></div>
                                }
                            }
                        </td>
                        <td><a href="/Account/Detail/@member.Member.Name" title="View @member.Member.Name's profile'">@member.Member.Name</a></td>
                        <td>@member.Title<br/>@Html.MemberRankStars(member, ranking)</td>
                        <td>@member.Member.Posts</td>
                        <td><snitz-datetime datetime="@member.LastPost"></snitz-datetime></td>
                        <td class="d-none d-md-table-cell">@member.MemberSince?.ToShortDateString()</td>
                        <td class="d-none d-md-table-cell">@member.LastHereDate?.ToShortDateString()</td>
                        @if (userroles != null && userroles.Contains("Admin"))
                        {
                            <td class="d-none d-md-table-cell">@member.Member.Email</td>
                        }
                        <td class="d-none d-md-table-cell">@member.Member.Country</td>
                        @if (userroles != null && userroles.Contains("Admin"))
                        {
                            <td class="d-none d-md-table-cell">
                                @if (member.Member.Status == 0)
                                {
                                    if (member.Title == null || !member.Title.StartsWith("Zapped"))
                                    {
                                        <i class="fa fa-unlock admin mr-2" title="Unlock Member"></i>
                                    }
                                }
                                else
                                {
                                    <i class="fa fa-lock admin mr-2" title="Lock Member"></i>
                                }
                                @if (member.Member.Posts < 1)
                                {
                                    <i class="fa fa-trash" title="Delete Member"></i>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
                <tfoot>
                <tr>
                    <td colspan="@colspan" class="text-center d-none d-md-table-cell">
                        <ul class="list-inline list-unstyled h4 initial">
                            <li class="list-inline-item"><a href="?initial=">All</a></li>
                            @foreach (var letter in initials)
                            {
                                <li class="list-inline-item"><a href="?initial=@letter">@letter</a></li>
                            }
                        </ul>
                    </td>
                </tr>
                </tfoot>
            </table>
            @if (Model.PageCount > 1)
            {
                var paging = new PagingModel
                {
                    PageCount = Model.PageCount,
                    Page = Model.PageNum
                };
                <partial name="ListPaging" model="paging" />
            }
        </div>
        <div class="d-none d-md-block col-3">
            <partial name="_QuickSearch"/>
            <partial name="_Login" model="new UserSignInModel()" />
        </div>
    </div>
</div>

@section Scripts
    {
    <script>
        // $(document).on('click', '.confirm-delete', function (e) {
        //     e.preventDefault();
        //     var id = $(this).data('id');
        //     $('#confirmModal').data('id', id).modal('show');
        // });
    </script>

}