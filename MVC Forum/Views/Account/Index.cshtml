@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MVCForum.Extensions
@using Microsoft.AspNetCore.Identity
@using MVCForum.ViewModels.User
@using SnitzCore.Data
@using SnitzCore.Data.Extensions
@using SnitzCore.Data.ViewModels
@using SnitzCore.Service.Extensions
@using SnitzCore.Service.TagHelpers
@model MVCForum.ViewModels.User.MemberIndexModel
@inject UserManager<ForumUser> UserManager

@{
    var ranking = MemberService.GetRankings();
    var rankType = SnitzConfig.GetIntValue("STRSHOWRANK", 0);
    int colspan = 9;
    var initials = Localizer["memberSearchInitials"].Value.ToCharArray();
    var sortorder = "asc";
    ViewBag.PageCount = Model.PageCount;
    IList<string>? userroles = null;
    var queryparams = $"sortdir={sortorder}&pagesize={Model.PageSize}";

    if (User.Identity!.IsAuthenticated)
    {
        var curruser = UserManager.GetUserAsync(User).Result;
        userroles = UserManager.GetRolesAsync(curruser!).Result;
    }
    if (userroles != null && userroles.Contains("Administrator"))
    {
        colspan = 10;
    }
    if (Context.Request.Query.ContainsKey("sortdir"))
    {
        var qval = Context.Request.Query["sortdir"];
        if (qval == "asc")
        {
            sortorder = "desc";
        }
    }
}
<div class="pt-0">
    <div class="row">
        <div class="col">
            <snitz-breadcrumb show-filter="true"></snitz-breadcrumb>
            <div class="collapse" id="showFilters">
                <form asp-action="Search" method="post" class="needs-validation" novalidate id="member-search">
                    <div class="input-group mb-3">
                        <select class="form-select" id="inputGroupSelect04" name="SearchIn" required="required">
                            <option value="" selected>@Localizer["SearchIn"]...</option>
                            <option value="1">@Localizer["UserName"]</option>
                            <option value="2">@Localizer["ProfileFirstname"]</option>
                            <option value="3">@Localizer["ProfileLastname"]</option>
                            <option value="4">@Localizer["ProfileTitle"]</option>
                            <option value="5">@Localizer["Email"]</option>
                        </select>
                            <button class="btn btn-secondary input-group-addon" type="submit">@Localizer["mnuForumSearch"]</button>
                    </div>
                    <div class="input-group mb-3">
                        <input type="text" placeholder="@Localizer["Search_Term"] ..." class="form-control input-group-append" name="SearchFor" required="required" />
                        <a snitz-if="@(userroles != null && @userroles.Contains("Administrator"))" asp-action="Register" class="btn btn-outline-secondary input-group-addon" title="@Localizer["createAccount"]">@Localizer["createAccount"]</a>
                    </div>
                </form>
                <div class="invalid-feedback ml-2">No values entered for search.</div>
                @if (SnitzConfig.GetValueWithDefault("STRACCOUNTPAGESIZES", "") != "")
                {
                    var sizes = SnitzConfig.GetValueWithDefault("STRACCOUNTPAGESIZES", "")!.Split(",");
                    if (sizes.Length > 1)
                    {
                        <form asp-action="Index" id="pagesize-form">
                        <span class="form-text mb-2">&nbsp;@Localizer["lblPageSize"]&nbsp;</span>
                        <div class="radioBtn btn-group" role="group" aria-label="Select page size" title="Select page size">
                            @foreach (var size in sizes)
                            {
                                    <input type="radio" class="btn-check" name="pagesize" id="option_@size" autocomplete="off" value="@size" @if (Model.PageSize == Convert.ToInt32(size))
                                    {
                                        @Html.Raw("checked")
                                    } />
                                <label class="btn btn-outline-secondary mb-2" for="option_@size">@size</label>
                            }
                        </div>
                        </form>
                    }
                }
            </div>

            <table class="table table-sm table-bordered table-hover table-striped">
                <thead class=" bg-dark text-white table-primary">
                <tr class="bg-dark text-white">
                    <th>&nbsp;</th>
                    <th>
                        @{
                            if (Model.SortCol == "name" && Model.SortDir == "asc")
                            {
                                    queryparams = queryparams.Replace("asc","desc");
                            }else{
                                queryparams = queryparams.Replace("desc","asc");
                            }
                        }
                        <a href="?orderby=name&@queryparams&initial=@Model.Initial">@Localizer["UserName"]</a></th>
                    <th snitz-if="@(rankType > 0)">@Localizer["ProfileTitle"]</th>
                    <th>
                        @{
                            if (Model.SortCol == "posts" && Model.SortDir == "asc")
                            {
                                    queryparams = queryparams.Replace("asc","desc");
                            }else{
                                queryparams = queryparams.Replace("desc","asc");
                            }
                        }
                        <a href="?orderby=posts&@queryparams&initial=@Model.Initial">@Localizer["ProfilePosts"]</a></th>
                    <th>
                        @{
                            if (Model.SortCol == "lastpost" && Model.SortDir == "asc")
                            {
                                    queryparams = queryparams.Replace("asc","desc");
                            }else{
                                queryparams = queryparams.Replace("desc","asc");
                            }
                        }
                        <a href="?orderby=lastpost&@queryparams&initial=@Model.Initial">@Localizer["ProfileLastPost"]</a></th>
                    <th class="d-none d-md-table-cell">
                        @{
                            if (Model.SortCol == "membersince" && Model.SortDir == "asc")
                            {
                                    queryparams = queryparams.Replace("asc","desc");
                            }else{
                                queryparams = queryparams.Replace("desc","asc");
                            }
                        }
                        <a href="?orderby=membersince&@queryparams&initial=@Model.Initial">@Localizer["ProfileDate"]</a></th>
                    <th class="d-none d-md-table-cell">
                        @{
                            if (Model.SortCol == "lastvisit" && Model.SortDir == "asc")
                            {
                                    queryparams = queryparams.Replace("asc","desc");
                            }else{
                                queryparams = queryparams.Replace("desc","asc");
                            }
                        }
                        <a href="?orderby=lastvisit&@queryparams&initial=@Model.Initial">@Localizer["ProfileLastVisit"]</a></th>
                    <th snitz-if="@(userroles != null && userroles.Contains("Administrator"))" class="d-none d-md-table-cell">@Localizer["Email"]</th>
                    <th class="d-none d-md-table-cell">@Localizer["ProfileCountry"]</th>
                    <th snitz-if="@(userroles != null && userroles.Contains("Administrator"))" class="d-none d-md-table-cell"></th>
                </tr>
                </thead>
                <tbody>
                @foreach (MemberListingModel member in Model.MemberList!)
                {
                    var showlink = member.Member.Name != "n/a" && member.Member.Name != "zapped";
                    <tr>
                        <td class="user-icon">
                            @if (member.LastLogin != null && member.LastLogin > DateTime.UtcNow.AddMinutes(-15) && !member.Member.Roles.Contains("HiddenMembers"))
                            {
                                <div class="center text-success"><snitz-status-icon status="@member.Member.Status" title="@member.Title"></snitz-status-icon></div>
                            }
                            else
                            {
                                <div class="center"><snitz-status-icon status="@member.Member.Status" title="@member.Title"></snitz-status-icon></div>
                            }
                        </td>
                        <td snitz-if="!showlink">@member.Member.Name</td>
                        <td snitz-if="showlink"><a href="~/Account/Detail/@Flurl.Url.Encode(member.Member.Name)" aria-label="@member.Member.Name, @Localizer[" tipViewProfile"]">@member.Member.Name</a></td>
                        <td snitz-if="@(rankType > 0)">
                            <span snitz-if="@(rankType == 1 || rankType == 3)">@member.Title<br /></span>
                            <member-rank snitz-if="@(rankType > 1)" member="@member.Member" user="@User" ranking="@ranking" size="fs-5"></member-rank>
                        </td>
                        <td>@member.Member.Posts</td>
                        <td><snitz-datetime datetime="@member.LastPost"></snitz-datetime></td>
                        <td class="d-none d-md-table-cell">@member.MemberSince?.ToForumDateDisplay()</td>
                        <td class="d-none d-md-table-cell">@member.LastLogin?.ToForumDateDisplay()</td>
                        <td snitz-if="@(userroles != null && userroles.Contains("Administrator"))" class="d-none d-md-table-cell">@member.Member.Email</td>
                        <td class="d-none d-md-table-cell">@member.Member.Country</td>
                        <td snitz-if="@(userroles != null && userroles.Contains("Administrator"))" class="d-none d-md-table-cell user-icon">
                            <link-confirm title="@Localizer["tipAuthorUnlock"].Value" jq-selector="confirm-unlock" snitz-if="(member.Member.Status == 0 && showlink)" href="~/Account/LockMember/" config-class="fa fa-unlock" config-key="@member.Id"></link-confirm>
                            <link-confirm title="@Localizer["tipAuthorLock"].Value" jq-selector="confirm-lock" snitz-if="(member.Member.Status != 0 && showlink)" href="~/Account/LockMember/" config-class="fa fa-lock" config-key="@member.Id"></link-confirm>
                            <link-confirm title="@Localizer["tipDelMember"].Value" jq-selector="confirm-delete" snitz-if="(member.Member.Posts < 1 && showlink)" href="~/Account/Delete/" config-class="fa fa-trash" config-key="@member.Id"></link-confirm>
                            <link-confirm title="@Localizer["tipZapMember"].Value" jq-selector="confirm-zap" snitz-if='@showlink' href="~/Account/ZapMember/" config-class="fa fa-bolt" config-key="@member.Id"></link-confirm>
                        </td>
                    </tr>
                }
                </tbody>
                <tfoot>
                <tr>
                    <td colspan="@colspan" class="text-center d-none d-md-table-cell">
                        <ul class="list-inline list-unstyled h4 initial">
                            <li class="list-inline-item"><a href="?initial=&@queryparams&orderby=@Model.SortCol">@Localizer["Search_All"]</a></li>
                            @foreach (var letter in initials)
                            {
                                <li class="list-inline-item"><a href="?initial=@letter&@queryparams&orderby=@Model.SortCol">@letter</a></li>
                            }
                        </ul>
                    </td>
                </tr>
                </tfoot>
            </table>
            @if (Model.PageCount > 1)
            {
                var paging = new PagingModel
                {
                    PageCount = Model.PageCount,
                    PageSize = Model.PageSize,
                    Page = Model.PageNum,
                    OrderBy = Model.SortCol,
                    SortDir = Model.SortDir,
                    Initial = Model.Initial
                };
                <partial name="ListPaging" model="paging" />
            }
        </div>
    </div>
</div>

@section Scripts
{
<renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
<script type="text/javascript">

    $(document).on("change", "input[type=radio][name=pagesize]", function() {
        $("#pagesize-form").submit();
    });

    $(document).on('click', '.confirm-lock', function (e) {
        e.preventDefault();
        var postid = $(this).data('id');
        var href = $(this).attr('href');
        (async() => {
            const result = await b_confirm(Snitzres.cnfLockMember)
            if (result) {
                $.post(href,
                    {
                        id: postid
                    },
                    function(data, status) {
                        if (!data.result) {
                            appendAlert(data.error, 'error');
                        } else {
                            location.reload();
                        }
                    });
            }
            })()

    });
    $(document).on('click', '.confirm-unlock', function (e) {
        e.preventDefault();
        var postid = $(this).data('id');
        var href = $(this).attr('href');
        (async() => {
            const result = await b_confirm(Snitzres.cnfUnlockMember)
            if (result) {
                $.post(href,
                {
                    id: postid
                },
                function(data, status){

                    if (!data.result) {
                        appendAlert(data.error, 'error');
                    } else {
                        location.reload();
                    }
                });
            }
            })();
    });
    $(document).on('click', '.confirm-delete', function (e) {
        e.preventDefault();
        var postid = $(this).data('id');
        var href = $(this).attr('href');
        (async() => {
                const result = await b_confirm(Snitzres.cnfDelMember )
            if (result) {
                $.post(href,
                    {
                        id: postid
                    },
                    function (data, status) {

                        if (!data.result) {
                            appendAlert(data, 'error');
                        } else {
                            location.reload();
                        }
                    });
            }
            })()
    });
    $(document).on('click', '.confirm-zap', function (e) {
        e.preventDefault();
        var postid = $(this).data('id');
        var href = $(this).attr('href');
        (async() => {
            const result = await b_confirm(Snitzres.cnfZapMember)
            if (result) {
                $.post(href,
                    {
                        id: postid
                    },
                    function(data, status){

                        if (!data.result) {
                            appendAlert(data, 'error');
                        } else {
                        location.reload();
                        }
                });
            }
            })();
    });
</script>

}

