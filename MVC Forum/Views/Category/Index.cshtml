@model MVCForum.ViewModels.Forum.ForumIndexModel
@using Microsoft.AspNetCore.Identity
@using System.Linq
@using BbCodeFormatter
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Routing

@using MVCForum.ViewModels.User
@using SnitzCore.Data.Models
@using SnitzCore.Service.TagHelpers
@inject SignInManager<ForumUser> SignInManager
@inject ICodeProcessor BbCodeProcessor
@{
    var cat = Context.Request.Query["id"];
    var routeid = Context.GetRouteValue("id");
    if (routeid != null)
    {
        cat = (string)routeid;
    }

    TempData["CatId"] = cat;
    TempData["ForumId"] = 0;
    var subscriptions = MemberService.Current()?.Subscriptions;
}
<div class="container pt-0">
    <snitz-breadcrumb></snitz-breadcrumb>
<div class="row">
    @if (User.IsInRole("Administrator"))
    {
        if (!string.IsNullOrWhiteSpace(cat))
        {
            <form class="form-inline col-4 col-lg-6">
                <div class="btn-group mb-2">
                    <button asp-controller="Forum" type="submit" asp-action="Create" asp-route-id="@cat" title=" @Localizer["tipNewForum"]" class="btn btn-outline-primary"><i class="fa fa-folder"></i><span class="d-none d-md-inline"> @Localizer["tipNewForum"]</span></button>
                    <button asp-controller="Category" type="submit" asp-action="Edit" asp-route-id="@cat" title="@Localizer["tipEditCategory"]" class="btn btn-outline-warning"><i class="fa fa-pencil"></i><span class="d-none d-md-inline"> @Localizer["tipEditCategory"]</span></button>
                    <button-confirm selector="confirm-delete" config-class="fa fa-trash" config-key="@cat" href="~/Category/Delete/?id=" title="@Localizer["cnfDeleteCategory"].Value"></button-confirm>
                </div>
            </form>
        }
        else
        {
            <form class="form-inline col-4 col-lg-6">
                <div class="btn-group mb-2">
                    <button asp-controller="Category" type="submit" asp-action="Create" title="@Localizer["tipNewCategory"]" class="btn btn-outline-primary"><i class="fa fa-folder-open"></i><span class="d-none d-lg-inline"> @Localizer["tipNewCategory"]</span></button>
                    <button asp-controller="Forum" type="submit" asp-action="Create" title="@Localizer["tipNewForum"]" class="btn btn-outline-primary"><i class="fa fa-folder"></i><span class="d-none d-lg-inline"> @Localizer["tipNewForum"]</span></button>
                </div>
            </form>
        }
    }
    <div class="col-8 d-lg-none"><partial name="QuickSearch" /></div>
    </div>
    <div class="row">
        <div class="col accordion">
            @foreach (var category in Model.Categories!)
            {
                var ID = category.Id;
                <div class="subforum border-0 border-primary accordion-item">
                    <h5 class="accordion-header subforum-title rounded" id="heading_@ID">
                        <button style="display: inline; width: 40px;" class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse_@ID" aria-expanded="true" aria-controls="collapseOne">
                            <i class="fa fa-minus"></i>
                        </button>
                        <a snitz-if="@(SnitzConfig.GetIntValue("STRSUBSCRIPTION", 0) != 0)" style="display: inline;" href="~/Category/@ID">@category.Name</a>
                        @if (category.Subscription == (int)CategorySubscription.CategorySubscription && User.Identity!.IsAuthenticated)
                        {
                            if (subscriptions!.Where(s => s.CategoryId == category.Id && s.PostId == 0).Select(s => s.CategoryId).Any())
                            {
                                <i class="fa fa-share-square category center m-2" title="@Localizer["btnUnsubscribe"]" data-id="@category.Id"></i>
                            }
                            else
                            {
                                <i class="fa fa-share-square-o category center m-2" title="@Localizer["cnfSubscribeCategory"]" data-id="@category.Id"></i>
                            }
                        }
                    </h5>
                    <div class="accordion-collapse collapse show" id="collapse_@ID" aria-labelledby="heading_@ID">
                        @foreach (var forum in Model.ForumList!.Where(f=>f.CategoryId == ID).OrderBy(f=>f.Order))
                        {
                            @if (HasAccess(forum.AccessType, forum.Id))
                            {
                                var weblinkclass = "";
                                if (forum.ForumType == ForumType.WebLink)
                                {
                                    weblinkclass = "subforum-weblink";
                                }
                                <div class="subforum-row @weblinkclass ">
                                    <div class="subforum-icon subforum-column text-center">
                                        <snitz-forum-icon is-administrator="@User.IsInRole("Administrator")" forum-id="@forum.Id" status="@forum.Status" forumtype="@((int)forum.ForumType)" accesstype="@((int)forum.AccessType)"></snitz-forum-icon>
                                        @if (User.IsInRole("Administrator") && forum.ForumType is ForumType.WebLink)
                                        {
                                            <br />
                                            <i class="fa fa-trash weblink-del" data-id="@forum.Id"></i>
                                        }

                                    </div>
                                    <div class="subforum-description subforum-column">
                                        @if (forum.ForumType == ForumType.WebLink)
                                        {
                                            <h4><a href="@forum.Url" target="_blank" title="">@Html.Raw(BbCodeProcessor.Subject(forum.Title))</a></h4>
                                        }
                                        else
                                        {
                                            <h4><a href="~/Forum/@forum.Id/?defaultdays=@((int)forum.DefaultView)" title="Go to @forum.Title">@Html.Raw(BbCodeProcessor.Subject(forum.Title))</a>
                                            @if (forum.ArchivedCount > 0)
                                            {
                                                    <a href="~/Forum/Archived/@forum.Id/?defaultdays=@((int)forum.DefaultView)" title="@Localizer["tipViewArchive"] (@forum.ArchivedCount)"><i class="fa fa-archive text-secondary"></i></a>
                                                
                                            }</h4>
                                        }
                                        <p>@Html.Raw(BbCodeProcessor.Format(forum.Description))</p>
                                        @if (forum.ForumModeration != Moderation.UnModerated )
                                        {
                                            <p class="form-text mt-2 fst-italic">@Localizer[$"Moderation_{forum.ForumModeration}"] in this Forum </p>
                                        }
                                        @if (forum.ForumSubscription != ForumSubscription.None)
                                        {
                                            <p class="form-text mt-2 fst-italic">@Localizer[$"Subscription_{forum.ForumSubscription}"]</p>
                                        }

                                    </div>
                                    @if (forum.ForumType != ForumType.WebLink)
                                    {
                                        <div class="subforum-stats subforum-column">
                                            <span>@forum.Posts @Localizer["lblPosts"] @Localizer["lblin"] @forum.Topics @Localizer["lblTopics"]</span>
                                        </div>

                                        <div class="subforum-info subforum-column">
                                            @if (forum.AccessType == ForumAuthType.All || User.IsInRole("Administrator"))
                                            {
                                                if (forum.LastPostTopicId.HasValue && forum.LastPostTopicId.Value > 0)
                                                {
                                                    <text>@Localizer["lblLastPost"] @Localizer["lblPostedBy"]</text>
                                                    <member-link member-id="@forum.LastPostAuthorId" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></member-link>
                                                    <br class="d-none d-sm-block"/>
                                                    <lastpost-link reply-id="@forum.LastPostReplyId" post-date="@forum.LastPostDateTime" topic-id="@forum.LastPostTopicId.Value" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></lastpost-link>
                                                }
                                            }
                                            else if (User.Identity!.IsAuthenticated && (forum.AccessType == ForumAuthType.Members ))
                                            {
                                                if (forum.LastPostTopicId.HasValue && forum.LastPostTopicId.Value > 0)
                                                {
                                                    <text>@Localizer["lblLastPost"] @Localizer["lblPostedBy"]</text>
                                                    <member-link member-id="@forum.LastPostAuthorId" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></member-link>
                                                    <br class="d-none d-sm-block" />
                                                    <lastpost-link reply-id="@forum.LastPostReplyId" post-date="@forum.LastPostDateTime" topic-id="@forum.LastPostTopicId.Value" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></lastpost-link>
                                                }
                                            }
                                        </div>
                                    }
                                </div>
                                <hr class="subforum-divider">
                            }
                        }
                    </div>
                </div>
            }
            @if (SnitzConfig.GetIntValue("STRSHOWSTATISTICS") == 1)
            {
                <partial name="ForumStats" />
            }
            @await Component.InvokeAsync("Members", new {max = 10,template = "wide"})

        </div>
        <div class="d-none d-lg-block col-3">
            <partial name="QuickSearch" />
            <partial name="FeaturedPoll" />
            <partial name="LatestPosts" model="@Model.LatestPosts"/>           
            @if (SnitzConfig.GetIntValue("INTFEATUREDPHOTO") == 1)
            {
                @await Component.InvokeAsync("ImageAlbum", new { template = "Featured" })
            }
        </div>
    </div>

</div>
@{
    var confModel = new ConfirmDialogViewModel() { 
        Title = Localizer["popDelCatTitle"].Value, // "Delete Category", 
        Message = Localizer["popDelCatMessage"].Value /* @"<p>You are about to delete this Category.</p><p>Do you wish to proceed?</p>" */
    };
}
<partial name="ConfirmDialog" model="@confModel" />

@functions
{
    bool HasAccess(ForumAuthType authType,int forumId)
    {
        if (User.IsInRole("Administrator"))
        {
            return true;
        }
        switch (authType)
        {
            case ForumAuthType.All:
                return true;
            case ForumAuthType.AllowedMembers:
                if (SignInManager.IsSignedIn(User) && (User.IsInRole("Forum_" + forumId) || User.IsInRole("Administrator")))
                {
                    return true;
                }
                return false;
            case ForumAuthType.PasswordProtected:
                return true;
            case ForumAuthType.AllowedMemberPassword:
                // if (SignInManager.IsSignedIn(User) && (User.IsInRole("Forum_" + forumId) || User.IsInRole("Administrator")))
                // {
                //     return true;
                // }
                return true;
            case ForumAuthType.Members:
                // if (SignInManager.IsSignedIn(User))
                //     return true;
                return true;
            case ForumAuthType.MembersHidden:
                return false;
            case ForumAuthType.AllowedMembersHidden:
                return false;
            case ForumAuthType.MembersPassword:
                // if (SignInManager.IsSignedIn(User))
                //     return true;
                return true;

        }

        return false;
    }
}
@section Scripts
{
    <script type="text/javascript" src="~/js/ConfirmDialog.js" crossorigin="anonymous"></script>
    <script>
        
        $(document).on("click", ".weblink-edit", function (e) {
            e.preventDefault();
            location.href = SnitzVars.baseUrl + "/Forum/Edit/" + $(this).data("id");
        });
        $(document).on("click", ".weblink-del", function (e) {
            e.preventDefault();
            $.get(SnitzVars.baseUrl + "/Forum/Delete/" + $(this).data("id"),
                function(data) {
                    if (data) {
                        location.href = data.redirectToUrl;
                    }
                });
        });

        let selectedCollapse = localStorage.getItem('selectedCollapse');

        if(selectedCollapse !== "null" && selectedCollapse !== null) {
            if ('@routeid' != "") {

            } else {
                let retArray = JSON.parse(selectedCollapse);
                $('.accordion .collapse').removeClass('hide');
                $.each(retArray, function (index, value) {
                    collapseme(value);
                    $("#" + value).addClass('hide');
                });
            }

            
        }
        //To set, which one will be opened
        $('.accordion .accordion-button').on('click', function(){ 

            let target = $(this).data('bs-target').replace("#","");
            if ('@routeid' != "") {
                return false;
            }            
            selectedCollapse = localStorage.getItem('selectedCollapse');
            let retArray = JSON.parse(selectedCollapse);
            var exists = jQuery.inArray(target, retArray);
            if (retArray === null || retArray.length == 0) {
                if (retArray === null) {
                    retArray = [target];
                } else {
                    retArray.push(target);
                    collapseme(target);
                }
                
            } else {
                $("#" + target).toggle();
                if (exists === -1) {
                    retArray.push(target);
                    collapseme(target);
                } else {
                    retArray = jQuery.grep(retArray, function (value) {
                        
                        return value != target;
                    });
                    $('.accordion').find("[data-bs-target='#" + target + "']").removeClass('collapsed');
                    $('.accordion').find("[data-bs-target='#" + target + "'] i").removeClass('fa-plus');
                    $('.accordion').find("[data-bs-target='#" + target + "'] i").addClass('fa-minus');
                }

            }

            //Save data to sessionStorage
            let string = JSON.stringify(retArray)
            localStorage.setItem('selectedCollapse', string);
        });
        function collapseme(target) {
            $('.accordion').find("[data-bs-target='#" + target + "']").addClass('collapsed');
            $('.accordion').find("[data-bs-target='#" + target + "'] i").removeClass('fa-minus');
            $('.accordion').find("[data-bs-target='#" + target + "'] i").addClass('fa-plus');
        }
    </script>
}
    
