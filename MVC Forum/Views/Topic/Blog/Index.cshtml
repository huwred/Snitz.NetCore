@using BbCodeFormatter
@using MVCForum.ViewModels.Post
@using Snitz.PostThanks.Helpers
@using SnitzCore.Service.Extensions
@inject IEnumerable<ISnitzStartupService> pluginservices
@model PostIndexModel

@{
    ViewBag.Title = Localizer["ttlBlog"] + " - " + BbCodeProcessor.Subject(Model.Topic.Title) + " | " + (SnitzConfig.ForumTitle);
    ViewBag.Topic = Model.Topic;

    string metaTitle = ViewBag.Title;
}
@section MetaData
{
        <title>@metaTitle</title>

<meta name="title" content="@metaTitle" />
<meta name="description" content="@BbCodeProcessor.StripTags(Model.Topic.Content).TruncateLongString(149)">
<meta name="author" content="@Model.Topic.Member.Name">
<meta name="copyright" content="@Html.Raw(String.Format(SnitzConfig.Copyright, DateTime.UtcNow.Year)) - @SnitzConfig.ForumTitle, @Model.Topic.Member.Name">
<meta name="distribution" content="global">
<meta name="rating" content="14 years">
}
@section Styles{
    
    <link href="~/css/star-rating.min.css" rel="stylesheet" />
    <link href="~/css/krajee-svg/theme.css" media="all" rel="stylesheet" type="text/css"/>
    <link href="@SnitzConfig.ThemeCss("tag_cloud.css")" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/prism.min.css">
    @if (ViewBag.RequireAuth)
    {
        <style>
            .modal-backdrop
            {
                opacity:1.0 !important;
            }
            .modal-backdrop.in {
                    opacity: 1.0 !important;
                }
            pre.language-markup{
                max-width:98% !important;
            }
        </style>
    }
    <renderstoredcontent asp-key="blog-css"></renderstoredcontent>
}
@{
    var jumpToreply = Context.Request.Query.ContainsKey("replyid");
    var isAdmin = User.IsInRole("Administrator");
    var hasForumRole = User.IsInRole("Forum_" + Model.ForumId);
    var isAuthenticated = User.Identity!.IsAuthenticated;
    bool allowrating = Model.ForumId != 0 ? Model.AllowTopicRating : Model.AllowRating;
    allowrating = allowrating && Model.AllowRating;
    var thanksservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(PostThanksService));
    if(thanksservice != null)
    {
        TempData["allowThanks"] = thanksservice.EnabledForTopic(Model.ForumId);
    }
    var currmember = MemberService.Current();
}
<snitz-breadcrumb show-filter="false"></snitz-breadcrumb>
@if (!ViewBag.RequireAuth)
{
    <div class="btn-toolbar padding-sm" id="page-top">
        <vc:topic-buttons postid="@Model.Id" topic-email="@(@User.Identity.IsAuthenticated ? 1 : 0)" snitz-if="@User.Identity.IsAuthenticated"></vc:topic-buttons>
    </div>
    <hr class="title" />
    <div class="row">
        <div class="col-9">
            <partial name="Blog/BlogPost" model="@Model.Topic" view-data="@this.ViewData" />
            @if (allowrating && Model.AuthorName != User.Identity.Name)
            {
                <form asp-action="SaveRating" id="save-rating" asp-controller="Topic" method="POST" data-ajax="true" data-ajax-update="#topic_rating" data-ajax-complete="TopicRated">
                    <div class="padding-md mb-3" dir="ltr"  style="margin-left: 4px;">
                        <input type="number" name="TopicId" value="@Model.Id" style="display:none" />
                        <input type="number" name="MemberId" value="@currmember.Id" style="display:none"/>
                        <div class="input-group" id="rating-grp">
                            <span class="input-group-text">@Localizer["lblRateMe"]</span>
                            <input id="rating-id" name="PostRating" type="number" class="rating" value="@Model.Rating" displayOnly=true min=0 max=5 step=0.5 stars=5 data-size="sm">
                        </div>
                    </div>
                    <div id="topic_rating"></div>
                </form>
            }
            <h4>@Localizer["lblComments"]</h4>
            <hr class="title" />        
            <div class="col-11 offset-1" id="comments">
                @foreach (var item in Model.Replies)
                {
                    item.Status = Model.Topic.Forum.Status;
                    if (item.Reply.Topic == null)
                    {
                        item.Reply.Topic = Model.Topic;
                    }
                    <a id="@item.Id"></a>
                    <partial name="Blog/Comment" model="@item.Reply" view-data="@this.ViewData" />
                }
            </div>    
        </div>
        @await Component.InvokeAsync("Widgets", new { template = "sidebar", widgets = new[] { "blog", "catlist" }, forumid = Model.ForumId })
    </div>

    if (Model.PageCount > 0)
    {
        <div class="col-9"></div>
        @if (Model.PageCount > 1)
        {
            <partial name="ListPaging" 
                model="@(new PagingModel{
                        PageCount = Model.PageCount,
                        PageSize = Model.PageSize,
                        Page = Model.PageNum,
                        OrderBy = "lpd",
                        SortDir = Model.SortDir})" />
        }
        else
        {
            <div class="mb3">&nbsp;</div>
        }
    }
}
<modal id="moderateModal" title="Post Moderation">
    <modal-body>
        <div id="postModeration"></div>
    </modal-body>
    <modal-footer dismiss-text="Cancel">
        <button id="send-email" form="moderateForm" type="submit" class="btn btn-success">@Localizer["btnSend"] <i class="fa fa-paper-plane" aria-hidden="true"></i></button>
        <button type="reset" form="moderateForm" class="btn btn-warning ">@Localizer["btnReset"]</button>
    </modal-footer>
</modal>
@section Scripts
{
    <script type="text/javascript" src="~/js/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" src="~/js/postcontroller.min.js"></script>
    <script type="text/javascript" src="~/js/tinymce/tinymce.min.js"></script>
    <script type="text/javascript" src="~/js/initPostForm.js"></script>
    <script type="text/javascript" src="~/js/prism.min.js" data-manual></script>
    <script type="text/javascript" src="~/js/topic.min.js"></script>
    <script type="text/javascript" src="~/js/star-rating.min.js"></script>
    <script type="text/javascript" src="~/js/krajee-svg/theme.js"></script>
    <script type="text/javascript">

        $(document).ready(function(){
            $(".post-control-btn").addClass("pull-right");
            $('#rating-id').on("rating:change", function(event, value, caption) {
                var form = $('#save-rating');
                $.ajax({
                    url: SnitzVars.baseUrl + '/Topic/SaveRating',
                    type: "POST",
                    data: form.serialize(),
                    success: function (data) {
                        $('#rating-id').rating("refresh", {disabled:true, showClear:false});
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });
        });
        function TopicRated(){
            $('.topic_rating').hide();
            $('#input-id-@Model.Id').rating("refresh", {disabled:true, showClear:false});
        }
        $(document).ajaxComplete(function(event, xhr, settings) {
            $('.loading').hide();
        });
        document.querySelectorAll('.star-rating:not(.readonly) label').forEach(star => {
            star.addEventListener('click', function() {
                this.style.transform = 'scale(1.2)';
                setTimeout(() => {
                    this.style.transform = 'scale(1)';
                }, 200);
            });
        });
        $(window).on("load",
            function (e) {

                $('.split-topic').on('click', function (e) {
                    e.preventDefault();
                    location.href = SnitzVars.baseUrl + "/Topic/SplitTopic/?id=" + $(this).data("topic") + "&replyid=" + $(this).data("id");
                });
            });

    </script>
    <renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
    <renderstoredcontent asp-key="topic-post-controls"></renderstoredcontent>
}
