@using BbCodeFormatter
@using MVCForum.ViewModels.Post
@using Snitz.PostThanks.Helpers
@using SnitzCore.Data.Extensions
@using SnitzCore.Service.Extensions
@inject IEnumerable<ISnitzStartupService> pluginservices

@model Post

@{
    var currmember = MemberService.Current();
    bool allowrating = Model.AllowRating == 1 && !MemberService.HasRatedTopic(Model.Id, currmember?.Id);
    
    var moderatedClass = $"modstatus-{Model.Status}";
    if (Model.UnmoderatedReplies > 0 && User.IsInRole("Administrator"))
    {
        moderatedClass = "modstatus-2";
    }
    DateTime date = Model.Created.FromForumDateStr();
    var thanksservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(PostThanksService));
    if (thanksservice != null)
    {
        TempData["allowThanks"] = thanksservice.EnabledForTopic(Model.Forum.Id);
    }
}
<div class="blog-container clearfix @moderatedClass">
    <div class="content-header">
        <h1>@BbCodeProcessor.Subject(Model.Title) 
            @if (allowrating && Model.Member.Name != User.Identity.Name)
            {
                <form asp-action="SaveRating" id="save-rating" asp-controller="Topic" method="POST" data-ajax="true" data-ajax-update="#topic_rating" data-ajax-complete="TopicRated">
                    <div class="padding-md mb-3" dir="ltr" style="margin-left: 4px;">
                        <input type="number" name="TopicId" value="@Model.Id" style="display:none" />
                        <input type="number" name="MemberId" value="@currmember?.Id" style="display:none" />
                        <div class="input-group" id="rating-grp">
                            <span class="input-group-text">@Localizer["lblRateMe"]</span>
                            <input id="rating-id" name="PostRating" type="number" class="rating" value="@(Decimal.Divide(Model.RatingTotal??0 , 10))" data-show-caption="true" data-min=0 data-max=5 data-step=0.5 data-size="sm">
                        </div>
                    </div>
                    <div id="topic_rating"></div>
                </form>
            }
            else 
            {
                <input snitz-if="@(Model.AllowRating == 1)" disabled name="PostRating" type="number" class="rating" value="@Model.GetTopicRating()" displayOnly=true min=0 max=5 step=0.5 stars=5 data-size="sm"/>
                
            }
        </h1>
        <div class="author-info">
            <div class="author-details">
                <snitz-avatar src="~/Content/Avatar/@Model.Member.PhotoUrl" def-src="~/images/ninja-1027877_960_720.webp" class="rounded-circle avatar-container mb-2 profile-popup" member="@Model.Member.Name" data-id="@Model.MemberId"/>
                <div class="info">
                    <h4>@Model.Member.Name</h4>
                    <span class="role">@Model.Member.Title</span>
                </div>
            </div>
            <div class="post-meta">
                <span class="date"><i class="fa fa-calendar"></i> <snitz-datetime datetime="@Model.Created.FromForumDateStr()"></snitz-datetime></span>
                <span class="divider">•</span>
                <span class="comments"><i class="fa fa-comment-o"></i> @Model.ReplyCount Comments</span>
            </div>
        </div>
        @if (ViewBag.RatingSum > 0)
        {
            <input id="star-rating-@Model.Id" value="@ViewBag.RatingSum" type="number" class="rating" min=0 max=5 step=0.1 data-size="xs" />
        }
        else if (ViewBag.RatingSum < 0)
        {
            <input id="star-rating-@Model.Id" value="@ViewBag.RatingSum" type="number" class="rating" min=0 max=5 step=0.1 data-size="xs" />
        }
    </div>
    <div class="row-fluid">
        <div class="blog-message content">
            @Html.Raw(BbCodeProcessor.Format(Model.Content))
        </div>
        <span class="fs-4">
            @await Component.InvokeAsync("PostControls", new { post = Model })
        </span>

    </div>
</div>

