@model MVCForum.ViewModels.Post.PostIndexModel
@using BbCodeFormatter
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SmartBreadcrumbs
@using Snitz.Events.Helpers
@using Snitz.PostThanks.Helpers
@using SnitzCore.Data
@using SnitzCore.Data.Extensions
@using SnitzCore.Service.Extensions
@using SnitzCore.Service.TagHelpers
@inject IEnumerable<ISnitzStartupService> pluginservices
@section MetaData
{
        <title>@Config.Value.strForumTitle: Forum > @Model.ForumName > @Model.Title</title>

    <meta name="title" content="Topic: @Model.Title" />
    <meta name="description" content="@Model.Content" />
    <meta name="robots" content="index,nofollow" />
    @if (SnitzConfig.GetIntValue("INTFORUMRSS") == 1)
    {
        <link rel="alternate" type="application/rss+xml" title="RSS" href="~/rssfeed/topic/@Model.Id">     
    }

}
@section Styles
{
    <link href="~/css/star-rating.min.css" rel="stylesheet" />
    <link href="~/css/krajee-svg/theme.css" media="all" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" href="~/css/prism.min.css">
    <style>
        .star-rating {
            direction: rtl;
            display: inline-block;
            cursor: pointer;
        }

            .star-rating input {
                display: none;
            }

            .star-rating label {
                color: #ddd;
                font-size: 20px;
                padding: 0 2px;
                cursor: pointer;
                transition: all 0.2s ease;
            }

                .star-rating label:hover,
                .star-rating label:hover ~ label,
                .star-rating input:checked ~ label {
                    color: #ffc107;
                }
        .user-card{
            font-family: Lato, Arial, sans-serif;
        }
        .user-card .first-row .user-card-avatar {
            margin-top: -3em;
            max-height: 8em;
        }

        .post-avatar, .topic-avatar, .user-card-avatar {
            position: relative;
        }
        .user-card .card-content a.card-huge-avatar, .group-card .card-content a.card-huge-avatar {
            display: block;
        }

        .user-card .first-row {
            display: flex;
        }

        .user-card .card-content, .group-card .card-content {
            padding: 10px;
            /* background: rgba(255,255,255, 0.5); */
        }

        .user-card .first-row .names, .group-card .first-row .names {
            flex: 1 1 auto;
        }

        .user-card .first-row .names, .group-card .first-row .names {
            padding-left: 1.25em;
        }

        .user-card .first-row .usercard-controls, .group-card .first-row .usercard-controls {
            list-style-type: none;
            margin: 0;
        }

        .user-card .card-row:not(.first-row), .group-card .card-row:not(.first-row) {
            margin-top: .5em;
        }

        .user-card .location-and-website {
            display: flex;
            flex-wrap: wrap;
            width: 100%;
            align-items: center;
        }

        .user-card .metadata, .group-card .metadata {
            display: flex;
            flex-wrap: wrap;
            gap: .15em .5em;
            color: #000;
        }
        .avatarlarge{
            max-height:100px;
            max-width:100px;
        }
        .modal-content{
            background-color: rgba(255, 255, 255, 0.85);
            width:640px;
        }
.user-info .user-detail .name-line .name, .user-info .user-detail .name-line .username {
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}
.user-card .names__primary, .group-card .names__primary {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            line-height: 1.2;
            font-size: 2em;
            font-weight: bold;
        }

        .public-user-fields .user-field-name {
            font-weight: bold;
            display:block;
        }
        .user-info .user-detail .name-line span:first-child {
    font-weight: bold;
    display:block;
}
    </style>
        @if (ViewBag.RequireAuth)
        {
            <style>
                .modal-backdrop
                {
                opacity:1.0 !important;
                }
                .modal-backdrop.in {
                opacity: 1.0 !important;
                }


            </style>
        }
}
@{
    var jumpToreply = Context.Request.Query.ContainsKey("replyid");
    var isAdmin = User.IsInRole("Administrator");
    var hasForumRole = User.IsInRole("Forum_" + Model.ForumId);
    var isAuthenticated = User.Identity!.IsAuthenticated;
    bool allowrating = Model.ForumId != 0 ? Model.AllowTopicRating : Model.AllowRating;
    allowrating = allowrating && Model.AllowRating;
    var thanksservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(PostThanksService));
    if(thanksservice != null)
    {
        TempData["allowThanks"] = thanksservice.EnabledForTopic(Model.ForumId);
    }
    var formaction = Model.Archived ? "Archived" : "Index";
    // var tracked = SnitzCookie.Tracked(Model.Id.ToString());
    // bool newPosts;
    // if (tracked != null)
    // {
    //     var today = DateTime.UtcNow.ToString("yyyyMM");
    //     newPosts = (today + tracked).FromForumDateStr() < Model.l.FromForumDateStr();
    //     if ((DateTime)ViewData["LastVisitDateTime"] > Model.LastPostDate.FromForumDateStr())
    //     {
    //         SnitzCookie.ClearTracking(Model.Id.ToString());
    //         newPosts = (DateTime)ViewData["LastVisitDateTime"] < Model.LastPostDate.FromForumDateStr();
    //     }

    // }
    // else
    // {
    //     newPosts = (DateTime)ViewData["LastVisitDateTime"] < topic.LastPostDate.FromForumDateStr();
    // }
}
    @if (Model.AccessDenied)
    {
        if (!SignInManager.IsSignedIn(User))
        {
            <div class="container">
                <h3>You do not have access to this post, please try <a href="~/Account/Login">logging in</a> first</h3>
            </div>
        }
        else
        {
            <div class="container">
                <h3>You do not have access to this post</h3>
            </div>
        }
        return;
    }

@if (!(bool)ViewBag.RequireAuth)
{
    var eventservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(CalEventsService));
    ViewBag.PageCount = Model.PageCount;
    var currmember = MemberService.Current();
    string pagenum = (Model.PageNum.ToString() ?? Context.Request.Query["page"])! ;
    var replyClass = "d-none";
    var loggedin = SignInManager.IsSignedIn(User);
    if (loggedin)
    {
        replyClass = "";
    }
    var showtopic = SnitzConfig.GetIntValue("INTTOPICDISPLAY") == 1 || (SnitzConfig.GetIntValue("INTTOPICDISPLAY") != 1 && int.Parse(pagenum) < 2);

    <div class="pt-0" id="topic-index">
        <snitz-breadcrumb show-filter="true"></snitz-breadcrumb>
        <!--Topic Section-->

        <vc:topic-buttons postid="@Model.Id" topic-email="@(loggedin ? 1 : 0)" snitz-if="@isAuthenticated"></vc:topic-buttons>
        <div snitz-if="@showtopic" class="card topic-container">
            @{
                var answer = "";
                if (Model.Answered)
                {
                    answer = "bg-success";
                }
            }
            <div class="card-header @answer modstatus-@Model.Status">
                @Html.Raw(BbCodeProcessor.Subject(Model.Title)) - <span class="form-text">@Localizer["lblPosted"] <snitz-datetime datetime="@Model.Created"></snitz-datetime> (@Model.Views @Localizer["Views"])</span>
                <a asp-controller="Topic" asp-action="Moderate" asp-route-id="@Model.Id" title="Moderate" class="modal-link"><i class="modstatus-@Model.Status fa fa-hand-stop-o"></i></a>
            </div>
            <div class="card-body">
                <div class="body topic">
                    <partial name="PostAuthor" model="Model.Author"/>
                    <div class="content flex-shrink-0 flex-grow-0">
                        @if (eventservice != null && eventservice.EnabledForTopic(Model.Id))
                        {
                            @await Component.InvokeAsync("Events", new { template = "TopicSummary", id = Model.Id })
                        }
                        @if (Model.HasPoll)
                        {
                            <div id="PollPanel">
                                @await Component.InvokeAsync("Polls", new { template = "DisplayPoll", catid = 0, forumid = 0, topicid = Model.Id })
                            </div>
                        }
                        @Html.Raw(BbCodeProcessor.Format(Model.Content))
                        @if (Model.ShowSig)
                        {
                            <div class="author-sig">@Html.Raw(BbCodeProcessor.Format(Model.Author.Signature))</div>
                        }
                    </div>

                </div>
            </div>
            <div snitz-if="@(isAuthenticated || (Model.Edited != null && Model.EditedBy != null))" class="card-footer text-dark">
                    <span snitz-if="@(SnitzConfig.GetIntValue("STREDITEDBYDATE") == 1 && Model.Edited != null)" class="form-text">@Localizer["lblEditedBy", Model.EditedBy!, Model.Edited?.ToLocalTime().ToForumDisplay()!]</span>
                @if (!Model.Archived)
                {
                    @await Component.InvokeAsync("PostControls", new { post = Model.Topic })

                }else{
                    @await Component.InvokeAsync("PostControls", new { post = Model.ArchivedTopic})
                }
                <div snitz-if="@SnitzConfig.GetIntValue("STRSHOWTOPICNAV") == 1" class="footer"><a href="" class="form-control-plaintext" title="Prev Topic"><i class="fa fa-step-backward"></i></a> <a class="form-control-plaintext text-end" href="" title="Next Topic"><i class="fa fa-step-forward"></i></a> </div>
            </div>
        </div>

        @if (allowrating @* && Model.AuthorName != User.Identity.Name *@)
        {
            <form asp-action="SaveRating" id="save-rating" asp-controller="Topic" method="POST" data-ajax="true" data-ajax-update="#topic_rating" data-ajax-complete="TopicRated">
                <div class="padding-md" dir="ltr"  style="margin-left: 40px;">
                    <input type="number" name="TopicId" value="@Model.Id" style="display:none" />
                    <input type="number" name="MemberId" value="@currmember.Id" style="display:none"/>
                    <div class="input-group" id="rating-grp">
                        <span class="input-group-text">@Localizer["lblRateMe"]</span>
                        <input id="rating-id" name="PostRating" type="number" class="rating" value="@Model.Rating" displayOnly=true min=0 max=5 step=0.5 stars=5 data-size="sm">
                    </div>
                </div>
                <div id="topic_rating"></div>
            </form>
        }else if (Model.AllowTopicRating)
        {
            <input disabled name="PostRating" type="number" class="rating" value="@Model.Rating" displayOnly=true min=0 max=5 step=0.5 stars=5 data-size="sm">
            
        }
        <!--Replies Section-->
        @if (Model.Replies != null && Model.Replies.Any())
        {
            var rowclass = "alt";
            var firstpage = true;
            int replycounter = 1;
            <div class="collapse" id="showFilters">
            <form id="defaultdays-form" asp-action="@formaction" class="form-inline">
                    <div class="row mt-2">
                        <div class="col-md-3">
                            <select class="form-select mb-2" id="sortdir" name="sortdir" title="Change sort direction">
                                <option value="des" selected-val="@Model.SortDir">@Localizer["optDesc"]</option>
                                <option value="asc" selected-val="@Model.SortDir">@Localizer["optAsc"]</option>
                            </select>
                        </div>
                        <div class="col"><span class="form-text">&nbsp;@Localizer["selSortDir"] &nbsp;</span></div>
                    </div>

                    @if (SnitzConfig.GetValueWithDefault("STRTOPICPAGESIZES", "") != "")
                    {
                        var ischecked = Model.PageSize;
                        <span class="form-text">&nbsp;@Localizer["lblPageSize"]&nbsp;</span>

                        <div class="radioBtn btn-group" role="group" aria-label="Select page size" title="Select page size">
                            @foreach (var size in SnitzConfig.GetValueWithDefault("STRTOPICPAGESIZES", "")!.Split(","))
                            {
                                <input type="radio" class="btn-check" name="pagesize" id="option_@size" autocomplete="off" value="@size"
                                @if (ischecked == Convert.ToInt32(size))
                                {
                                    @Html.Raw("checked")
                                } />
                                <label class="btn btn-outline-secondary mb-2" for="option_@size">@size</label>
                            }
                        </div>
                    }
                <input type="number" value="@pagenum" name="page" style="display: none;"/>
            </form>
            </div>
            <div class="reply-container">
                @foreach (var reply in Model.Replies)
                {
                    rowclass = rowclass == "alt" ? "" : "alt";
                    var hidemestyle = firstpage ? "" : "display:none;";
                    var inneranswer = reply.Answer ? "bg-success" : "";
                    var viewUnmoderated = reply.Status < 2;

                    firstpage = jumpToreply || (Model.PageSize > 5 && replycounter < 5);
                    replycounter += 1;
                    if (isAdmin || hasForumRole || reply.AuthorName == User.Identity.Name)
                    {
                        viewUnmoderated = true;
                    }
                    <div class="card mb-3 reply-card " snitz-if="@viewUnmoderated">
                        <div style="@hidemestyle">
                                <div class="card-header @inneranswer modstatus-@reply.Status">
                                @Localizer["lblPosted"] <snitz-datetime datetime="@reply.Created"></snitz-datetime>
                                <a snitz-if="@((isAdmin || hasForumRole) && reply.Status == 2)" asp-controller="Reply" asp-action="Moderate" asp-route-id="@reply.Id" title="Moderate" class="modal-link"><i class="modstatus-@reply.Status fa fa-hand-stop-o"></i></a>
                                <a snitz-if="@((isAdmin || hasForumRole) && reply.Status == 3)" asp-controller="Reply" asp-action="Moderate" asp-route-id="@reply.Id" title="Moderate" class="modal-link"><i class="modstatus-@reply.Status fa fa-pause"></i></a>
                                <span class="pull-right">
                                    <i class="fa fa-object-ungroup split-topic" data-id="@reply.Id" data-topic="@Model.Id" title="@Localizer["tipSplitTopic"]" style="display: none;" data-toggle="tooltip"></i>
                                    <input type="checkbox" class="form-check-input reply-select" value="@reply.Id" name="replyselected" />
                                </span>
                            </div>
                            <div class="card-body" id="reply-@reply.Id">
                                <div class="body @rowclass">
                                    <partial name="PostAuthor" model="reply.Author"/>
                                    <div class="content">
                                        @Html.Raw(BbCodeProcessor.Format(reply.Content))
                                        <div snitz-if="@(reply.ShowSig)" class="author-sig">@Html.Raw(BbCodeProcessor.Format(reply.Author.Signature))</div>
                                    </div>
                                </div>
                            </div>
                            <div snitz-if="@(isAuthenticated || (reply.Edited != null && !string.IsNullOrWhiteSpace(reply.EditedBy)))" class="card-footer text-dark">
                                <span snitz-if="@(SnitzConfig.GetIntValue("STREDITEDBYDATE") == 1 && reply.Edited != null && !string.IsNullOrWhiteSpace(reply.EditedBy))" class="form-text">@Localizer["lblEditedBy", reply.EditedBy!, reply.Edited?.ToLocalTime().ToForumDisplay()!]</span>
                                @await Component.InvokeAsync("PostControls", new { post = reply})
                            </div>
                        </div>
                    </div>
                }
            </div>
    <!--Pagination starts-->
        @if (Model.PageCount > 1)
        {
            <partial name="ListPaging" 
                model="@(new PagingModel{
                        PageCount = Model.PageCount,
                        PageSize = Model.PageSize,
                        Page = Model.PageNum,
                        OrderBy = "lpd",
                        Archived = Model.Archived,    
                        SortDir = Model.SortDir})" />
        }
        else
        {
            <div class="mb3">&nbsp;</div>
        }
    }
    else
    {
            <p snitz-if="@(isAuthenticated && !Model.IsLocked)" class="p-4">@Localizer["lblNoReplyMessage"]</p>
            <p snitz-if="@(!isAuthenticated && !Model.IsLocked)" class="p-4">@Localizer["lblNoReplies"]</p>
    }
    
        <!--Reply Area-->
        @if (SnitzConfig.GetIntValue("STRSHOWQUICKREPLY") == 1 && !Model.Archived)
        {
            <div id="QRAlertPlaceholder"></div>

            <div snitz-if="@(!Model.IsLocked)" class="comment-area @replyClass mt-2" id="reply-area">
                <form asp-controller="Reply" asp-action="AddReply" class="needs-validation" id="QuickReply" novalidate>
                    <textarea name="Content" id="msg-text" placeholder="reply here ... " class="form-control" required="required" rows="6"></textarea>
                    <div class="invalid-feedback text-danger-emphasis">@Localizer["MessageRequired"]</div>
                    <input name="TopicId" type="hidden" value="@Model.Id"/>
                    <input asp-for="ForumId" type="hidden"/>
                    <div class="mb-3 p-3 row">
                        @if (SnitzConfig.GetIntValue("STRSIGNATURES") == 1 && currmember != null)
                        {
                            <div class="col-12 col-md-6 form-check">
                                <input class="form-check-input" id="show-sig" name="UseSignature" tabindex="5" type="checkbox" value="true" checked="@(currmember.SigDefault == 1)">
                                <input name="UseSignature" type="hidden" value="false">
                                <label class="form-check-label mt-1" for="show-sig">&nbsp;@Localizer["cbxShowSig"]</label>
                            </div>
                        }
                            @if (isAdmin)
                        {
                                <div class="col-12 col-md-6 form-check">
                                <input class="form-check-input" asp-for="IsLocked" tabindex="5" type="checkbox" checked="@Model.IsLocked">
                                <label class="form-check-label mt-1" for="IsLocked">&nbsp;@Localizer["cbxLockTopic"]</label>
                            </div>
                            @if (SnitzConfig.GetIntValue("STRSTICKYTOPIC") == 1)
                            {
                                    <div class="col-12 col-md-6 form-check">
                                    <input class="form-check-input" asp-for="IsSticky" tabindex="5" type="checkbox" checked="@Model.IsSticky">
                                    <label class="form-check-label mt-1" for="IsSticky">&nbsp;@Localizer["cbxMakeSticky"]</label>
                                </div>
                            }
                        }
                            <div class="col-12 col-md-6 form-check" style="display: none;">
                            <input class="form-check-input" id="SaveDraft" name="SaveDraft" tabindex="5" type="checkbox" value="true"><input name="SaveDraft" type="hidden" value="false">
                            <label class="form-check-label mt-1">@Localizer["cbxDraft"]</label>
                        </div>
                    </div>
                    <div class="mb-3 mt-2">
                        <button type="reset" class="btn btn-warning">@Localizer["btnReset"]</button>
                        <button type="submit" id="btn-submit" class="btn btn-success">@Localizer["btnPost"]</button>
                    </div>
                </form>
            </div>
        }

    </div>
}
<modal id="memberModal" title="Email Member">
    <modal-body>
        <div id="member-modal"></div>
    </modal-body>
    <modal-footer dismiss-text="Cancel">
        <button id="send-email" form="sendemail-form" type="submit" class="btn btn-success">@Localizer["btnSend"] <i class="fa fa-paper-plane" aria-hidden="true"></i></button>
        <button type="reset" form="sendemail-form" class="btn btn-warning ">@Localizer["btnReset"]</button>
    </modal-footer>
</modal>
<modal id="pmModal" title="Message Member">
    <modal-body>
        <div id="pm-modal"></div>
    </modal-body>
    <modal-footer dismiss-text="Cancel">
        <button id="send-email" form="sendpm-form" type="submit" class="btn btn-success">@Localizer["btnSend"]</button>
        <button type="reset" form="sendpm-form" class="btn btn-warning ">@Localizer["btnReset"]</button>
    </modal-footer>
</modal>
<modal id="moderateModal" title="Post Moderation">
    <modal-body>
        <div id="posModeration"></div>
    </modal-body>
    <modal-footer dismiss-text="Cancel">
        <button id="send-email" form="moderateForm" type="submit" class="btn btn-success">@Localizer["btnSend"] <i class="fa fa-paper-plane" aria-hidden="true"></i></button>
        <button type="reset" form="moderateForm" class="btn btn-warning ">@Localizer["btnReset"]</button>
    </modal-footer>
</modal>

<partial name="Modal\UploadModal" />

<!-- Send Topic Popup -->
@if (SnitzConfig.GetIntValue("STRSHOWSENDTOFRIEND") == 1)
{
    <modal id="modal-sendto" title="Send Topic">
        <modal-body>
            <div id='sendToContainer' class="modal-body">
                <div class="container text-center">
                    <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </modal-body>
        <modal-footer dismiss-text="Cancel">
            <button type="submit" form="sendToForm" class="btn btn-success" >@Localizer["btnSend"]</button>
            <button type="reset" form="sendToForm" class="btn btn-warning">Reset</button>
        </modal-footer>
    </modal>
}
<input type="text" style="display: none;" id="req-auth" value="@ViewBag.RequireAuth.ToString()" />
<input type="text" style="display: none;" id="req-forumid" value="@Model.ForumId" />
<partial name="Modal\PasswordDlg" model='new ConfirmDialogViewModel(){Title=Localizer["popPasswordRqdTitle"].Value,Message = Localizer["popPasswordRqdMessage"].Value}' />
<div id="user-card" class="modal fade" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body user-card">
                <div class="card-content" id="user-card-content"></div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
<renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
<script type="text/javascript" src="~/js/jquery.unobtrusive-ajax.min.js"></script>
<script type="text/javascript" src="~/js/postcontroller.min.js"></script>
<script type="text/javascript" src="~/js/tinymce/tinymce.min.js"></script>
<script type="text/javascript" src="~/js/initPostForm.js"></script>
<script type="text/javascript" src="~/js/prism.min.js" data-manual></script>
<script type="text/javascript" src="~/js/topic.min.js"></script>
<script src="~/js/star-rating.min.js"></script>
<script src="~/js/krajee-svg/theme.js" type="text/javascript"></script>
    <script type="text/javascript">
        const qralertPlaceholder = document.getElementById('QRAlertPlaceholder')
          const qrappendAlert = (message, type) => {
          const wrapper = document.createElement('div')
          wrapper.innerHTML = [
            `<div class="alert alert-${type} alert-dismissible" role="alert">`,
            `   <div>${message}</div>`,
            '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
            '</div>'
          ].join('')

          qralertPlaceholder.append(wrapper)
        }

        $(document).ready(function(){
            $('#rating-id').on("rating:change", function(event, value, caption) {
                var form = $('#save-rating');
                $.ajax({
                    url: SnitzVars.baseUrl + '/Topic/SaveRating',
                    type: "POST",
                    data: form.serialize(),
                    success: function (data) {
                        $('#rating-id').rating("refresh", {disabled:true, showClear:false});
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });
        });
        function TopicRated(){
            $('.topic_rating').hide();
            $('#input-id-@Model.Id').rating("refresh", {disabled:true, showClear:false});
        }
        $(document).ajaxComplete(function(event, xhr, settings) {
            $('.loading').hide();
        });
        document.querySelectorAll('.star-rating:not(.readonly) label').forEach(star => {
            star.addEventListener('click', function() {
                this.style.transform = 'scale(1.2)';
                setTimeout(() => {
                    this.style.transform = 'scale(1)';
                }, 200);
            });
        });
        $(window).on("load",
            function (e) {
                $('.split-topic').on('click', function (e) {
                    e.preventDefault();
                    location.href = SnitzVars.baseUrl + "/Topic/SplitTopic/?id=" + $(this).data("topic") + "&replyid=" + $(this).data("id");
                });
            });

        $("#QuickReply").submit(function (e) {
            e.preventDefault();

            tinyMCE.get("msg-text").save();
            var form = $("#QuickReply");
            var formData = new FormData(form[0]);
            $.ajax({
                url: $(this).attr("action"),
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (data) {
                    location.href = data.url;// + '?page=-1';
                },
                error: function (err) {
                    console.log(err.responseJSON.err);
                    qrappendAlert(SnitzVars.floodErr, 'danger');
                }
            });
            return false;
        });
    </script>
    <renderstoredcontent asp-key="password-dialog"></renderstoredcontent>
    <renderstoredcontent asp-key="topic-post-controls"></renderstoredcontent>
}