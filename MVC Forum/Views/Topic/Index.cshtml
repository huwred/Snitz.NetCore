@model MVCForum.Models.Post.PostIndexModel
@using BbCodeFormatter
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MVCForum.Models
@using MVCForum.TagHelpers
@using SmartBreadcrumbs
@using SnitzCore.Data.Models
@using SnitzCore.Service.TagHelpers
@inject ICodeProcessor BbCodeProcessor
@inject SignInManager<ForumUser> SignInManager
@section MetaData
{
    <meta name="title" content="Topic: @Model.Title" />
    <meta name="description" content="@Model.Content" />
    <meta name="robots" content="index,nofollow" />
}
@section Styles
{
    <link rel="stylesheet" href="~/css/prism.css">
}

@{
    ViewBag.PageCount = Model.PageCount;

    string pagenum = (Model.PageNum.ToString() ?? Context.Request.Query["page"])! ;
    var replyClass = "d-none";
    var loggedin = SignInManager.IsSignedIn(User);
    if (loggedin)
    {
        replyClass = "";
    }
}
<div class="container pt-0">
    <snitz-breadcrumb></snitz-breadcrumb>
    <!--Topic Section-->
    <topic-buttons snitz-if="@SnitzConfig.GetIntValue("STRSHOWSENDTOFRIEND") == 1 || @SnitzConfig.GetIntValue("STRSHOWPRINTERFRIENDLY") == 1 || @SnitzConfig.GetIntValue("STRSOCIALSHARE") == 1" topic-print="@Model.Id" topic-email="@Model.Id" topic-share="@SnitzConfig.GetIntValue("STRSOCIALSHARE")"></topic-buttons>
    <div snitz-if="@SnitzConfig.GetIntValue("INTTOPICDISPLAY") == 1 || (@SnitzConfig.GetIntValue("INTTOPICDISPLAY") != 1 && int.Parse(@pagenum) < 2)" class="card mb-2 topic-container bg-white">
        <div class="card-header">
            @Model.Title - <span class="form-text">@Localizer["lblPosted"] <snitz-datetime datetime="@Model.Created"></snitz-datetime> (@Model.Views @Localizer["Views"])</span>
        </div>
        <div class="card-body">
            <div class="body topic">
                <partial name="_PostAuthor" model="Model.Author"/>
                <div class="content">
                    @Html.Raw(BbCodeProcessor.Format(Model.Content))
                </div>
            </div>
        </div>
        <div snitz-if="@User.Identity.IsAuthenticated || @Model.Edited != null" class="card-footer text-dark">
            <span snitz-if="@SnitzConfig.GetIntValue("STREDITEDBYDATE") == 1 && @Model.Edited != null" class="form-text">@Localizer["lblEditedBy", Model.EditedBy, Model.Edited]</span>
            <post-controls text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }" use-bookmarks="@SnitzConfig.GetIntValue("STRBOOKMARK",0)==1" post-type="Topic" post-status="@Model.IsLocked" post-id="@Model.Id" topic-id="@Model.Id" curr-user="@User" post-author="@Model.AuthorName" logged-in="@loggedin"></post-controls>
            <div snitz-if="@SnitzConfig.GetIntValue("STRSHOWTOPICNAV") == 1" class="footer"><a href="" class="form-control-plaintext" title="Prev Topic"><i class="fa fa-step-backward"></i></a> <a class="form-control-plaintext text-end" href="" title="Next Topic"><i class="fa fa-step-forward"></i></a> </div>
        </div>
    </div>

<!--Replies Section-->
@if (Model.Replies != null && Model.Replies!.Any())
{
    <form id="defaultdays-form" asp-action="Index" class="form-inline">
        <div class="input-group">
                <span class="form-text">&nbsp;Sort direction &nbsp;</span>
            <select class="form-control mb-2" id="sortdir" name="sortdir">
                <option value="des" selected-val="@Model.SortDir">@Localizer["optNewest"]</option>
                <option value="asc" selected-val="@Model.SortDir">@Localizer["optOldest"]</option>
            </select>
            @if (SnitzConfig.GetValue("STRTOPICPAGESIZES", "") != "")
            {
                var ischecked = Model.PageSize;
                <span class="form-text">&nbsp;Set page size&nbsp;</span>

                <div class="radioBtn btn-group" role="group" aria-label="Select page size" title="Select page size">
                    @foreach (var size in SnitzConfig.GetValue("STRTOPICPAGESIZES", "").Split(","))
                    {
                        <input type="radio" class="btn-check" name="pagesize" id="option@size" autocomplete="off" value="@size"
                               @if (ischecked == Convert.ToInt32(size))
                               {
                                   @Html.Raw("checked")
                               }/>
                        <label class="btn btn-outline-secondary mb-2" for="option@size">@size</label>
                    }
                </div>
            }
        </div>

        <input type="number" value="@pagenum" name="page" style="display: none;"/>
    </form>

    var rowclass = "alt";

    <div class="reply-container">

        @foreach (var reply in Model.Replies!)
        {
            rowclass = rowclass == "alt" ? "" : "alt";

            <div class="card mb-3">
                <div class="card-header">
                    Posted <snitz-datetime datetime="@reply.Created"></snitz-datetime>
                </div>
                <div class="card-body" id="reply-@reply.Id">
                    <div class="body @rowclass">
                        <partial name="_PostAuthor" model="reply.Author" />
                        <div class="content">
                            @Html.Raw(BbCodeProcessor.Format(reply.Content))
                        </div>
                    </div>
                </div>
                <div snitz-if="@User.Identity.IsAuthenticated || @reply.Edited != null" class="card-footer text-dark">
                    <span snitz-if="@SnitzConfig.GetIntValue("STREDITEDBYDATE") == 1 && @reply.Edited != null" class="form-text">@Localizer["lblEditedBy", reply.EditedBy, reply.Edited]</span>
                    <post-controls text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }" use-bookmarks="@SnitzConfig.GetIntValue("STRBOOKMARK",0)==1" post-type="Reply" post-status="@Model.IsLocked" post-id="@reply.Id" topic-id="@Model.Id" curr-user="@User" post-author="@reply.AuthorName" logged-in="loggedin"></post-controls>
                </div>
            </div>
        }
    </div>
    <!--Pagination starts-->
    @if (Model.PageCount > 1)
    {
        var paging = new PagingModel
        {
            PageCount = Model.PageCount,
            Page = Model.PageNum,
            OrderBy = "lpd",
            SortDir = Model.SortDir
        };

        <partial name="ListPaging" model="paging" />
    }
    else
    {
        <div class="mb3">&nbsp;</div>
    }
}
else
{
    <p snitz-if="@User.Identity.IsAuthenticated" class="p-4">@Localizer["NoReplyMessage"]</p>
    <p snitz-if="!@User.Identity.IsAuthenticated" class="p-4">@Localizer["lblNoReplies"]</p>
}
    <!--Reply Area-->
    <div snitz-if="!@Model.IsLocked" class="comment-area @replyClass mt-2" id="reply-area">
        <form asp-controller="Topic" asp-action="AddReply" class="needs-validation" novalidate>
            <textarea name="Content" id="msg-text" placeholder="reply here ... " class="form-control" required="required"></textarea>
            <div class="invalid-feedback text-danger-emphasis">@Localizer["MessageRequired"]</div>
            <input name="TopicId" type="hidden" value="@Model.Id"/>
            <input asp-for="ForumId" type="hidden"/>
            <div class="mb-3 mt-2">
                <button type="reset" class="btn btn-warning">@Localizer["btnReset"]</button>
                <button type="submit" class="btn  btn-success">@Localizer["btnPost"]</button>
            </div>
        </form>
    </div>

</div>


<div id="memberModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-dark text-bg-dark">
                <a href="#" data-bs-dismiss="modal" aria-hidden="true" class="close">X</a>
                <h4 id="modal-title"></h4>
            </div>
            <div class="modal-body">
                <div id="member-modal"></div>
            </div>
            <div class="modal-footer">
                <a href="#" id="btnOk" class="btn btn-danger">@Localizer["btnOk"]</a>
                <a href="#" data-bs-dismiss="modal" aria-hidden="true" class="btn btn-secondary">@Localizer["btnCancel"]</a>
            </div>
        </div>
    </div>
</div>
@{
    var confModel = new ConfirmDialogViewModel()
    {
        Title = "Manage Topic",
        Message = @"<p></p>"
    };
    <partial name="ConfirmDialog" model="@confModel" />
}
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">
                    @Localizer["lblFileUpload"]
                </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="upload-content">
                    
                </div>
            </div>
            <div class="modal-footer">
                <p class="footer-title">
                    If you're having problems uploading, try choosing a smaller image.
                </p>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript" src="/js/postcontroller.js"></script>
    <script type="text/javascript" src="/js/tinymce/tinymce.min.js"></script>
    <script type="text/javascript" src="/js/initPostForm.js"></script>
    <script type="text/javascript" src="/js/prism.js" data-manual></script>
    <script type="text/javascript">
        $(document).ready(function() {
            $(".fig-caption").each(function() {
                var test = $(this);
                $.ajax({
                    url: "/PhotoAlbum/GetCaption/" + $(this).data("id"),
                    type: "GET",
                    success: function(data) {
                        //alert(data); // the View
                        test.html(data);
                    }
                });
            });
        });
        $(document).on('click',
            '#submitUpload',
            function(e) {
                e.preventDefault();
                var form = $("#upload-form");
                var formData = new FormData(form[0]);
                $.ajax({
                    url: $("#upload-form").attr("action"),
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function(data) {
                        if (data.result) {
                            if (!data.type) {
                                var img = "[image=" + data.id + "]";
                                if (data.caption) {
                                    img = "[cimage=" + data.id + "]";
                                }
                                tinymce.activeEditor.execCommand('mceInsertContent', false, img);
                            } else {
                                alert(data.type);
                                var file = "[file " + data.filesize + "]" + data.data + "[/file]";
                                if (data.type === ".pdf") {
                                    file = "[pdf]" + data.data + "[/pdf]";
                                } else if (data.type === ".jpg" || data.type === ".png" || data.type === ".jpeg" || data.type === ".webp") {
                                    file = "[img]" + data.data + "[/img]";
                                }

                                tinymce.activeEditor.execCommand('mceInsertContent', false, file);
                            }

                            $('#uploadModal').modal('hide');
                        }

                    },
                    error: function(data) {
                        alert("error");
                        $('#upload-content').html(data);
                    },
                    complete: function(data) {
                        $('#uploadModal').modal('hide');
                    }

                });
                return false;
            });

        $(document).on("click",
            ".email-link",
            function(e) {
                e.preventDefault();
                var memberid = $(this).data("id");
                var href = $(this).data("url");
                $('#modal-title').html('Send Email');
                $('#member-modal').load(href + "/" + memberid, function() {});
                $('#memberModal #btnOk').hide();

                $(document).on("click",
                    "#send-email",
                    function(e) {
                        e.preventDefault();
                        $(this).prop('disabled', true);
                        var post_url = $('#sendemail-form').attr("action");
                        var form_data = $('#sendemail-form').serialize();
                        $.ajax({
                            url: post_url,
                            type: "POST",
                            data: form_data
                        }).done(function(response) {
                            if (response.result) {
                                $('#memberModal').modal('hide');
                            } else {
                                //Dont close the modal, display the error
                                $('#member-modal').html(response);
                            }
                        });

                    });
                $('#memberModal').data('id', memberid).modal('show');
                //tinymce.EditorManager.execCommand('mceAddEditor', true, "textarea#email-text");
            });
        $(document).on("click",
            ".sendpm-link",
            function(e) {
                e.preventDefault();
                var memberid = $(this).data("id");
                var href = $(this).data("url");
                $('#modal-title').html('Send private message');
                $('#member-modal').load(href + "/" + memberid, function() {});
                $('#memberModal #btnOk').hide();

                $(document).on("click",
                    "#send-pm",
                    function(e) {
                        e.preventDefault();
                        $(this).prop('disabled', true);
                        var post_url = $('#sendpm-form').attr("action");
                        var form_data = $('#sendpm-form').serialize();
                        $.ajax({
                            url: post_url,
                            type: "POST",
                            data: form_data
                        }).done(function(response) {
                            if (response.result) {
                                $('#memberModal').modal('hide');
                            } else {
                                //Dont close the modal, display the error
                                $('#member-modal').html(response);
                            }
                        });

                    });
                $('#memberModal').data('id', memberid).modal('show');

            });

        $(document).on("click",
            ".show-ip",
            function(e) {
                e.preventDefault();
                var memberid = $(this).data("id");
                var href = $(this).data("url");
                $('#modal-title').html('IP Address');
                $('#member-modal').load(href + "/" + memberid, function() {});
                //$('#member-modal').html(href + "/" + memberid);
                $('#memberModal').data('id', memberid).modal('show');
            });

        $("#aFile_upload").on("change",
            function(e) {
                var filesize = ((this.files[0].size / 1024) / 1024).toFixed(4); // MB
                var maxsize = parseInt('@SnitzConfig.GetValue("INTMAXFILESIZE", "5")');
                if (filesize > maxsize) {
                    alert("File is too big!");
                    this.value = "";
                }

            });

        $(document).on('click',
            '#btnOk',
            function() {
                //just hide for now, needs to submit forms
                $('#memberModal').modal('hide');
            });

        Prism.hooks.add("before-highlight",
            function(env) {
                env.code = env.element.innerText;
            });

        code = document.getElementsByTagName('code');
        Array.from(code).forEach(el => { Prism.highlightElement(el) });


    </script>
}