@using SmartBreadcrumbs
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BbCodeFormatter
@using Snitz.Events.Helpers
@using Snitz.Events.Models
@using SnitzCore.Data
@model MVCForum.ViewModels.Post.NewPostModel
@inject ICodeProcessor BbCodeProcessor
@inject IEnumerable<ISnitzStartupService> pluginservices
@section Styles
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/css/bootstrap-datepicker3.min.css">
}
@{
    var eventservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(CalEventsService));

    var formaction = "AddPost";
    if (!Model.IsPost)
    {
        formaction = "AddReply";
    }
    Model.Content = BbCodeProcessor.Format(Model.Content)!;
    var addEvent = Context.Request.Query["isevent"];
    var addPoll = Context.Request.Query["ispoll"];
}
<div class="container pt-0">
    <snitz-breadcrumb></snitz-breadcrumb>
    <div class="row">
        <form asp-controller="Topic" asp-action="@formaction" method="post" id="addPostForm" class="needs-validation col col-md-8 offset-md-2 bg-form p-4 rounded" novalidate>
            @if ((User.IsInRole("Administrator") || User.IsInRole("Forum_" + Model.ForumId)) && Model.IsPost)
            {
                if (SnitzConfig.GetIntValue("STRMOVETOPICMODE") == 0 || User.IsInRole("Administrator"))
                {
                    <div class="mb-3">
                        <label asp-for="ForumId" class="form-label">@Localizer["lblForum"]</label>
                        <select asp-for="ForumId" class="form-select">
                            @foreach (var forum in Model.Forums)
                            {
                                <option value="@forum.Key">@forum.Value</option>
                            }
                        </select>
                    </div>
                }
                else if (User.IsInRole("Forum_" + Model.ForumId))
                {
                    <div class="mb-3">
                        <label asp-for="ForumId" class="form-label">@Localizer["lblForum"]</label>
                        <select asp-for="ForumId" class="form-select">
                            @foreach (var forum in Model.Forums)
                            {
                                if (User.IsInRole("Forum_" + forum.Key))
                                {
                                    <option value="@forum.Key">@forum.Value</option>
                                }
                            }
                        </select>
                    </div>
                }

            }
            else
            {
                <input asp-for="ForumId" type="hidden" />
            }
            @if (Model.IsPost)
            {
                <div class="mb-3 ">
                    <label asp-for="Title" class="form-label"></label>
                    <input asp-for="Title" class="form-control"/>
                    <div class="invalid-feedback">You must provide a title.</div>
                </div>
            }
            <input asp-for="CatId" type="hidden" />
            <input snitz-if="@Model.Id > 0" asp-for="Id" type="hidden" />
            <input asp-for="TopicId" type="hidden" />
            <input asp-for="IsPost" type="hidden" />            
            <input asp-for="Created" type="hidden"/>
            <div class="mb-3">
                <textarea asp-for="Content" class="form-control" id="msg-text" rows="12" required="required"></textarea>
                <div class="invalid-feedback">@Localizer["MessageRequired"]</div>
            </div>
            <div class="mb-3">
                <div class="row g-0">
                    @if (SnitzConfig.GetIntValue("STRSIGNATURES") == 1)
                    {
                        <div class="pl-3 col-12 col-md-6 form-check">
                            <input class="form-check-input" id="show-sig" name="UseSignature" tabindex="5" type="checkbox" value="true" checked="@Model.UseSignature">
                            <input name="UseSignature" type="hidden" value="false">
                            <label class="form-check-label">@Localizer["cbxShowSig"]</label>
                        </div>
                    }
                    @if (User.IsInRole("Administrator"))
                    {
                        <div class="pl-3 col-12 col-md-6 form-check">
                            <input class="form-check-input" asp-for="Lock" tabindex="5" type="checkbox" checked="@Model.Lock">
                            <label class="form-check-label">@Localizer["cbxLockTopic"]</label>
                        </div>
                        @if (SnitzConfig.GetIntValue("STRSTICKYTOPIC") == 1)
                        {
                            <div class="pl-3 col-12 col-md-6 form-check">
                                <input class="form-check-input" asp-for="Sticky" tabindex="5" type="checkbox" checked="@Model.Sticky">
                                <label class="form-check-label">@Localizer["cbxMakeSticky"]</label>
                            </div>
                        }
                        @if (SnitzConfig.GetIntValue("STRARCHIVESTATE") == 1)
                        {
                            <div class="pl-3 col-12 col-md-6 form-check">
                                <input class="form-check-input" asp-for="DoNotArchive" tabindex="5" type="checkbox" checked="@Model.DoNotArchive">
                                <label class="form-check-label">@Localizer["cbxNoArchive"]</label>
                            </div>
                        }
                    }
                    else
                    {
                        <input asp-for="Lock" tabindex="5" type="hidden" value="@(Model.Lock ? 0 : 1)">
                        <input asp-for="Sticky" tabindex="5" type="hidden" value="@(Model.Sticky ? 1 : 0)">
                        <input asp-for="DoNotArchive" tabindex="5" type="hidden" value="@(Model.DoNotArchive ? 1 : 0)">
                    }
                    <div class="pl-3 col-12 col-md-6 form-check" style="display: none;">
                        <input class="form-check-input" id="SaveDraft" name="SaveDraft" tabindex="5" type="checkbox" value="true"><input name="SaveDraft" type="hidden" value="false">
                        <label class="form-check-label">@Localizer["cbxDraft"]</label>
                    </div>
                </div>
            </div>

            <partial name="FormButtons"/>
        </form>
        @if (addPoll.Count > 0 || (TempData["HasPoll"] != null && (bool)TempData["HasPoll"]))
        {
            @await Component.InvokeAsync("Polls", new { template = "AddPoll", catid = Model.CatId, forumid = Model.ForumId })

        }
        @if (addEvent.Count > 0 || eventservice.EnabledForTopic(Model.Id))
        {
            <div class="mt-3 mb-3 col col-md-8 offset-md-2 bg-form p-4 rounded" id="event-form">
                @await Component.InvokeAsync("Events", new { template = "AddEvent", id = MemberService.Current().Id, topicid=Model.Id })
            </div>
        }
    </div>
</div>
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">
                    @Localizer["lblFileUpload"]
                </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="upload-content">
                    
                </div>
            </div>
            <div class="modal-footer">
                <p class="footer-title">
                    If you're having problems uploading, try choosing a smaller image.
                </p>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js"></script>

    <script type="text/javascript" src="/js/tinymce/tinymce.min.js"></script>
    <script type="text/javascript" src="/js/initPostForm.js"></script>
    <script type="text/javascript">
        $('.date').datepicker({
            autoclose: true,
            format: {
                /*
                 * Say our UI should display a week ahead,
                 * but textbox should store the actual date.
                 * This is useful if we need UI to select local dates,
                 * but store in UTC
                 */
                    
                toDisplay: function (date, format, language) {
                    var d = new Date(date);
                    d.setDate(d.getDate());
                    return d.toLocaleDateString();
                },
                toValue: function (date, format, language) {
                    let re = /([0-9]{4})([0-9]{2})([0-9]{2})/;
                    let lastFirst = date.replace(re, '$1-$2-$3');
                    var d = new Date(lastFirst);
                    d.setDate(d.getDate());
                    return new Date(d);
                }
            }
        });
        $("#addPostForm").submit(function (e) {
            e.preventDefault();

            tinyMCE.get("msg-text").save();
            var form = $("#addPostForm");
            var formData = new FormData(form[0]);
            $.ajax({
                url: $(this).attr("action"),
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (data) {
                    console.log(data);
                    if ($('#event-form').length > 0) {
                        var evtform = $('#event-form').find('form');

                        $('#event-topic').val(data.id);
                        var eventData = new FormData(evtform[0]);
                        $.ajax({
                            url: evtform.attr("action"),
                            type: "POST",
                            data: eventData,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                location.href = data.url;
                            },
                            error:function(err){
                                console.log(err);
                            }
                        }); 
                        //save event data for Topic
                    }
                    else if ($('#poll-form').length > 0) {
                        //save poll data for Topic
                        var evtform = $('#poll-form').find('form');

                        $('#poll-topic').val(data.id);
                        var eventData = new FormData(evtform[0]);
                        $.ajax({
                            url: evtform.attr("action"),
                            type: "POST",
                            data: eventData,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                location.href = data.url;
                            },
                            error:function(err){
                                console.log(err);
                            }
                        }); 
                    } else {
                        location.href = data.url;
                    };

                },
                error:function(err){
                    console.log(err);
                }
            }); 
            return false;
        });
        $(document).ready(function () {
            $(".fig-caption").each(function () {
                var test = $(this);
                $.ajax({
                    url: "/PhotoAlbum/GetCaption/" + $(this).data("id"),
                    type: "GET",
                    success: function (data) {
                        //alert(data); // the View
                        test.html(data);
                    }
                });
            });
        });
        $(document).on('click',
            '#submitUpload',
            function (e) {
                e.preventDefault();
                var form = $("#upload-form");
                var formData = new FormData(form[0]);
                $.ajax({
                    url: $("#upload-form").attr("action"),
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.result) {
                            if (!data.type) {
                                var img = "[image=" + data.id + "]";
                                if (data.caption) {
                                    img = "[cimage=" + data.id + "]";
                                }
                                tinymce.activeEditor.execCommand('mceInsertContent', false, img);
                            } else {
                                alert(data.type);
                                var file = "[file " + data.filesize + "]" + data.data + "[/file]";
                                if (data.type === ".pdf") {
                                    file = "[pdf]" + data.data + "[/pdf]";
                                } else if (data.type === ".jpg" || data.type === ".png" || data.type === ".jpeg" || data.type === ".webp") {
                                    file = "[img]" + data.data + "[/img]";
                                }

                                tinymce.activeEditor.execCommand('mceInsertContent', false, file);
                            }

                            $('#uploadModal').modal('hide');
                        }

                    },
                    error: function (data) {
                        alert("error");
                        $('#upload-content').html(data);
                    },
                    complete: function (data) {
                        $('#uploadModal').modal('hide');
                    }

                });
                return false;
            });
        $("#aFile_upload").on("change",
            function(e) {
                var filesize = ((this.files[0].size / 1024) / 1024).toFixed(4); // MB
                var maxsize = parseInt('@SnitzConfig.GetValue("INTMAXFILESIZE", "5")');
                if (filesize > maxsize) {
                    alert("File is too big!");
                    this.value = "";
                }

            });
    </script>
}
