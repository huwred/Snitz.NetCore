@using BbCodeFormatter
@using Microsoft.AspNetCore.Http
@using SnitzCore.Data.Extensions
@model MVCForum.ViewModels.SplitTopicViewModel
@section styles
{
    <style>
        .message img {
            max-width: 400px !important;
        }
        hr{ margin-top: 1px;margin-bottom: 1rem;}
    </style>
}
@{
    ViewBag.Title = "Topic : " + Model.Topic?.Title;
    List<int> selectedReplies = new List<int>();
    if (Context.Session.Get("ReplyList") != null)
    {
        selectedReplies = Context.Session.GetObject<List<int>>("ReplyList");
    }
}
<div class="container pt-0">
    <snitz-breadcrumb></snitz-breadcrumb>
    <h5>Split @ViewBag.Title </h5>
    <hr />
    <form asp-action="SplitTopic" asp-controller="Topic" method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="Id" />
        @Html.AntiForgeryToken()
        <div class="row mb-3 ">
            <div class="col-12 col-lg-6 bg-form rounded-3 p-3">
                <p class="form-text">Select the replies you would like to move. They will be moved into a new Topic using the information provided below.</p>
                <div class="mb-3">
                    <label for="ForumId" class="form-label">Forum</label>
                    @Html.DropDownListFor(model => model.ForumId, new SelectList(Model.ForumList, "Key", "Value"), new { @class = "form-select" })
                    <div class="invalid-feedback text-danger-emphasis">@Localizer["PropertyRequired", Localizer["Forum"].Value]</div>
                </div>
                <div class="mb-3">
                    <label for="Subject" class="form-label">New Subject</label>
                    @Html.TextBoxFor(model => model.Subject, new { @class = "form-control" })
                    <div class="invalid-feedback text-danger-emphasis">@Localizer["PropertyRequired", Localizer["Subject"].Value]</div>
                </div>
                <div>
                    <button class="btn btn-success" type="submit">Split</button>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <h5 class="small">Topic Review</h5>
                <table class="table table-responsive table-bordered table-striped">
                    <tr class="row">
                        <th colspan="2">
                            <label>@Model.Topic?.Title</label>
                        </th>
                    </tr>
                    <tr class="row">
                        <td class="col-2">@Model.Topic?.Member?.Name</td>
                        <td class="col">
                            @Model.Topic?.Created.FromForumDateStr()
                            <hr class="title" />
                            @Html.Raw(BbCodeProcessor.Format(Model.Topic?.Content))
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row">

            <div class="col-8 offset-2">
                <h5>Replies</h5><hr class="title" />
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr class="row">
                            <th class="col-1">
                                @Localizer["lblAuthor"]
                            </th>
                            <th class="col-10">

                            </th>
                            <th class="col-1"><input type="checkbox" id="checkAll" title="@Localizer["tipCheckAll"]" /></th>
                        </tr>
                    </thead>
                    @if (Model.Replies.Any())
                    {
                        foreach (var item in Model.Replies)
                        {
                            <tr class="row">
                                <td class="col-1">@item.Member?.Name</td>
                                <td class="form-text col-10">
                                    @item.Created.FromForumDateStr()
                                    <hr class="title"/>
                                    @Html.Raw(BbCodeProcessor.Format(item.Content))
                                </td>
                                <td class="col-1">
                                    @if (selectedReplies.Contains(item.Id) || item.Id == ViewBag.ReplyId)
                                    {
                                        <input type="checkbox" name="check" value="@item.Id" class="selector" checked=""/>
                                    }
                                    else
                                    {
                                        <input type="checkbox" name="check" value="@item.Id" class="selector"/>
                                    }

                                </td>
                            </tr>
                        }
                    }
                </table>

            </div>
        </div>

    </form>
</div>




@section Scripts {
    <script type="text/javascript">
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                // Get the forms we want to add validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                
                
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function(form) {
                    
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }

                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
        $('#checkAll').change(function () {
            var checkboxes = $(this).closest('form').find(':checkbox');
            if ($(this).is(':checked')) {
                checkboxes.prop('checked', true);
            } else {
                checkboxes.prop('checked', false);
            }
        });

        // $.validator.addMethod('selector', function (value) {
        //     return $('.selector:checked').size() > 0;
        // }, 'Please select at least one reply.');

    </script>
}
