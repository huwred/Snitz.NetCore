@using BbCodeFormatter
@using SnitzCore.Data.Extensions
@model MVCForum.ViewModels.SplitTopicViewModel
@inject ICodeProcessor BbCodeProcessor
@section styles
{
    <style>
        .message img {
            max-width: 400px !important;
        }
        hr{ margin-top: 1px;margin-bottom: 1rem;}
    </style>
}
@{
    ViewBag.Title = "Topic : " + Model.Topic.Title;
    List<int> selectedReplies = new List<int>();
    if (Context.Session.GetObject<List<int>>("ReplyList") != null)
    {
        selectedReplies = Context.Session.GetObject<List<int>>("ReplyList");
    }
}
<div class="container pt-0">
    <snitz-breadcrumb></snitz-breadcrumb>
    <h5>Split Topic</h5>
    <hr class="title" />
    @using (Html.BeginForm("SplitTopic", "Topic", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="row mb-3">
            <div class="col-12 col-lg-6">
                <p class="form-text">Select the replies you would like to move. They will be moved into a new Topic using the information provided below.</p>
                <label for="ForumId" class="form-label">Forum</label>
                @Html.DropDownListFor(model => model.ForumId, new SelectList(Model.ForumList, "Key", "Value"), new { @class = "form-select" })
                <label for="Subject" class="form-label">New Subject</label>
                @Html.TextBoxFor(model => model.Topic.Title, new { @class = "form-control mb-3",@name="Title" })
                <div>
                    <span>@Html.ValidationSummary(false)</span>
                    <button class="btn btn-success">Split</button>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <h5 class="small">Topic Review</h5>
                <table class="table table-responsive table-bordered table-striped">
                    <tr class="row">
                        <th colspan="2">
                            <label>@Model.Topic.Title</label>
                        </th>
                    </tr>
                    <tr class="row">
                        <td class="col-2">@Model.Topic.Member.Name</td>
                        <td class="col">
                            @Model.Topic.Created.FromForumDateStr()
                            <hr class="title" />
                            @Html.Raw(BbCodeProcessor.Format(Model.Topic.Content))
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row">

            <div class="col-8 offset-2">
                <h5>Replies</h5><hr class="title" />
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr class="row">
                            <th class="col-1">
                                @Localizer["lblAuthor"]
                            </th>
                            <th class="col-10">

                            </th>
                            <th class="col-1"><input type="checkbox" id="checkAll" title="@Localizer["tipCheckAll"]" /></th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.Replies)
                    {
                        <tr class="row">
                            <td class="col-1">@Html.HiddenFor(i => i.Id)@item.Member.Name</td>
                            <td class="form-text col-10">
                                @item.Created.FromForumDateStr()
                                <hr class="title" />
                                @Html.Raw(BbCodeProcessor.Format(item.Content))
                            </td>
                            <td class="col-1">
                                @if (selectedReplies.Contains(item.Id) || item.Id == ViewBag.ReplyId)
                                {
                                    <input type="checkbox" id="check" name="check" value="@item.Id" class="selector" checked="" />
                                }
                                else
                                {
                                    <input type="checkbox" id="check" name="check" value="@item.Id" class="selector" />
                                }

                            </td>
                        </tr>
                    }
                </table>

            </div>
        </div>
    }

</div>




@section Scripts {
    <script src="~/js/jquery.unobtrusive-ajax.js"></script>
    <script src="/js/jquery.lazyload-any.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $('.lazyloadtr').lazyload({
           // Sets the pixels to load earlier. Setting threshold to 200 causes image to load 200 pixels
           // before it appears on viewport. It should be greater or equal zero.
           threshold: 250,

           // Sets the callback function when the load event is firing.
           // element: The content in lazyload tag will be returned as a jQuery object.
           load: function(element) {},

           // Sets events to trigger lazyload. Default is customized event `appear`, it will trigger when
           // element appear in screen. You could set other events including each one separated by a space.
           trigger: "appear"
       });
        $('#checkAll').change(function () {
            var checkboxes = $(this).closest('form').find(':checkbox');
            if ($(this).is(':checked')) {
                checkboxes.prop('checked', true);
            } else {
                checkboxes.prop('checked', false);
            }
        });

        $.validator.addMethod('selector', function (value) {
            return $('.selector:checked').size() > 0;
        }, 'Please select at least one reply.');

        $(document).ready(function() {
            $.lazyload.check();
        });
    </script>
}
