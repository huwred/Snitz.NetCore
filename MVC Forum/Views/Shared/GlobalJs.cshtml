@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject UserManager<ForumUser> userManager
@{
    int pending = 0;
    if (User.IsInRole("Administrator"))
    {
        pending = userManager.Users.Include(u => u.Member).Where(u => !u.EmailConfirmed || (u.LockoutEnabled && u.LockoutEnd != null)).Count();
    }
}
<script type="text/javascript">
    var SnitzVars = SnitzVars ||
    {
        toolTips: {
            fileBtn: '@Localizer["tipAttach"]', //"Attach a file to the post" ,
            albumBtn: '@Localizer["tipUpload"]', // "Upload an image to your album and display a thumbnail in the post"
        },
        AdDuration: '@SnitzConfig.GetIntValue("INTADDURATION", 30)',
        userName: '@User.Identity?.Name',
        currentUserId: '@MemberService.Current()?.Id',
        currentlocation: '@Context.Request.Path',
        cookieDomain: '@Context.Request.Host',
        cookiePath: '@SnitzConfig.CookiePath',
        baseUrl: '@Context.Request.PathBase',
        isUserAuthenticated: '@User.Identity?.IsAuthenticated',
        forumTitle: '@(Config.Value.strForumTitle ?? SnitzConfig.GetValue("STRFORUMTITLE"))',
        forumUrl: '@(Config.Value.strForumUrl ?? SnitzConfig.ForumUrl)',
        forumDesc: '@Config.Value.strForumDescription',
        MaxImageSize: parseInt('@SnitzConfig.GetIntValue("INTMAXIMAGESIZE")') * 1024 * 1024,
        MaxFileSize: parseInt('@SnitzConfig.GetIntValue("INTMAXFILESIZE")'),
        allowedimagetypes: '@SnitzConfig.GetValue("STRIMAGETYPES")',
        allowedfiles: [
            @foreach (var allowedFile in SnitzConfig.GetValue("STRFILETYPES").Split(','))
            {
                @Html.Raw("'")
                @allowedFile
                @Html.Raw("',")
            }
        ],
        forumlang: '@SnitzCookie.GetCookieValue("CookieLang")',
        defaultTheme: '@SnitzConfig.GetValue("STRDEFAULTTHEME")',
        useTimeago: '@SnitzConfig.GetValue("INTUSETIMEAGO")',
        erpop: '@(TempData["errorpopup"] != null)',
        pending: parseInt("@(pending)"),
        errMsg: '@ViewBag.Error',
        successMsg: '@ViewBag.Success',
        tempScrollTop: sessionStorage.getItem('scrollTop'),
        expandPageFilters: function(){
            $('.filter_button').removeClass("collapsed");
            $('.filter_button').attr("aria-expanded","true");
            $('#showFilters').addClass("show");
        },
        captchaCheck: function (answer, callback) {
            $.ajax({
                url: SnitzVars.baseUrl + '/captchacheck/' + answer,
                type: 'GET',
                success: function (data) {

                    if (callback) { callback(data); }

                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR);
                    console.log(exception);
                    return false;
                }
            });
        },
        attach : '@SnitzConfig.GetIntValue("STRALLOWUPLOADS")' === '1',
        photoalbum : '@SnitzConfig.GetIntValue("STRPHOTOALBUM")' === '1',
        favmenu : {
            favs: {title: 'My Favourites', items: 'code | searchreplace | emoticons'}
        },
        toolbardef :
            'snitzAttach snitzImage | undo redo | styleselect | bold italic | alignleft aligncenter alignright | bullist numlist | link emoticons media | code codesample',
        menudef : 'favs edit insert format table help'
    };

        /* Quick reply editor overrides */
    if ($('#QuickReply').length > 0) {
        SnitzVars.menudef = false; // turn off the menu bar
        SnitzVars.toolbardef =
        'snitzAttach snitzImage | undo redo | styleselect | bullist numlist | link emoticons media | codesample';

    }

</script>

