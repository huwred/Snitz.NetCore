@using MVCForum.TagHelpers
@using BbCodeFormatter
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Snitz.Events.Helpers
@using SnitzCore.Data
@using SnitzCore.Service.TagHelpers
@model MVCForum.ViewModels.Post.PostListingModel
@inject ICodeProcessor BbCodeProcessor
@inject IEnumerable<ISnitzStartupService> pluginservices
@{
    Layout = null;
    var eventservice = pluginservices.FirstOrDefault(t => t.GetType() == typeof(CalEventsService));
    var answeredClass = "";
    var moderatedClass = $"modstatus-{Model.Status}";
    if (Model.UnmoderatedReplies > 0 && User.IsInRole("Administrator"))
    {
        moderatedClass = "modstatus-2";
    }
    if (Model.Answered)
    {
        answeredClass = "answered-overlay";
    }
    var subscriptions = MemberService.Current()?.Subscriptions;
}
<div class="table-row @answeredClass rounded-2 @moderatedClass">

    <div class="status" data-status="@Model.Status" style="z-index: 2">
        @if (eventservice.EnabledForTopic(Model.Id))
        {
            <i class="fa fa-calendar"></i>
        }else if (Model.HasPoll)
        {
            <i class="fa fa-bar-chart"></i>
        }
        else
        {
            <snitz-topic-icon answered="@Model.Answered" status="@Model.Status" replies="@Model.RepliesCount" views="@Model.ViewCount" lastpost="@Model.LastPostDate"></snitz-topic-icon>
        }
    </div>
    <div class="subjects" style="z-index: 2">
        <div class="d-lg-flex flex-row bd-highlight mb-3">
            <div class="p-2 flex-grow-1 bd-highlight">
                <a href="/Topic/@Model.Id">@Html.Raw(BbCodeProcessor.Subject(Model.Title!))</a><br/>

                <span>
                    @Localizer["Started"] @Localizer["lblPostedBy"] <member-link text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }" member-id="@Model.AuthorId"></member-link>
                    @if ((bool)ViewData["ActiveTopics"])
                    {
                        @Localizer["lblin"]
                        <a href="/Forum/@Model.Forum.Id">@Html.Raw(BbCodeProcessor.Subject(Model.Forum.Title!))</a>
                    }
                    <snitz-datetime datetime="@Model.Created"></snitz-datetime> .
                </span>
                @if (SnitzConfig.GetIntValue("STRSHOWPAGING") == 1)
                {
                    @if (Model.RepliesCount > ViewBag.PageSize)
                    {
                        var paging = new PagingModel
                        {
                            PageCount = Model.RepliesCount / ViewBag.PageSize,
                            PageSize = ViewBag.PageSize,
                            Page = Model.Id
                        };
                        <partial name="QuickPaging" model="paging"/>
                    }
                }
            </div>
            <div class="d-md-flex  p-2 bd-highlight fs-6">
                @await Component.InvokeAsync("PostControls", new { post = Model ,forlist = true})
            </div>
        </div>


    </div>
    <div class="replies">
        @Model.RepliesCount @Localizer["lblReplies"] <br/> @Model.ViewCount @Localizer["lblViews"]
    </div>
    <div class="last-reply" style="z-index:2">
        @if (SnitzConfig.GetIntValue("STRJUMPLASTPOST") == 1 && Model.LastPostDate != null)
        {
            <lastpost-link post-date="@Model.LastPostDate" topic-id="@Model.Id" reply-id="@Model.LatestReply" text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }"></lastpost-link>
            <span class=""><br/>@Localizer["lblPostedBy"] <b><member-link text-localizer-delegate="delegate(string s) { return Localizer[s].Value; }" member-name="@Model.LastPostAuthorName"></member-link></b></span>
        }
    </div>
    <div class="subscribe d-none d-sm-inline-flex">
        <input snitz-if="@(User.IsInRole("Administrator"))" type="checkbox" class="form-check-input topic-select" value="@Model.Id" name="topicselected" />
    </div>
</div>