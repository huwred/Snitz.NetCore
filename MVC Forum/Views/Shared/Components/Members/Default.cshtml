@model List<RecentMembers>
@using SnitzCore.Data.ViewModels
@using SnitzCore.Service.MiddleWare
@using Microsoft.AspNetCore.Identity
@using SnitzCore.Data.Extensions;
@inject UserManager<ForumUser> userManager
@{
    var onlinecount = OnlineUsersMiddleware.GetOnlineUsersCount();
    var hiddencount = 0;
    var activecount = 0;
    var activemembers = new List<RecentMembers>();
    var maxonline = SnitzConfig.GetIntValue("INTMAXONLINE", 0);
    var _logger = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod()?.DeclaringType);
    if(onlinecount > maxonline)
    {
        maxonline = onlinecount;
        _logger.Warn($"Setting Max OnlineCount {onlinecount}");
        SnitzConfig.SetValue("INTMAXONLINE", onlinecount.ToString());
    }
    foreach (var member in Model)
    {
        if(member.LastActivity.FromForumDateStr() > DateTime.UtcNow.AddMinutes(-5))
        {
            var user = userManager.FindByNameAsync(member.Name).Result;
            if(user != null)
            {
                if (userManager.IsInRoleAsync(user, "HiddenMembers").Result)
                {
                    hiddencount += 1;
                }
                else
                {
                    activecount += 1;
                    activemembers.Add(member);
                }
            }
        }
    }
}
<div id="content" class="widget-item mb-2">
<ul class="list-unstyled">
    <li>
        @if(onlinecount == 1)
        {
            @Localizer["lblOnlineUsersDesc1", new object[] { onlinecount, activecount, hiddencount, Math.Max(onlinecount - activecount,0), maxonline, "" }]
        }
        else
        {
            @Localizer["lblOnlineUsersDesc", new object[] { onlinecount, activecount, hiddencount, Math.Max(onlinecount - activecount,0), maxonline, "" }] 
        }
    </li>
    <li>
        @foreach (var activemember in activemembers)
        {
            <snitz-avatar title="@Localizer["ProfileSummary"].Value" src="@activemember!.Avatar" def-src="~/images/ninja-1027877_960_720.webp" class="avatarsmall rounded-circle profile-popup" data-id="@activemember.Id" />
        }
    </li>
    <li><hr /></li>
    <li>@Localizer["lblRecent"]</li>
    @foreach(var member in Model)
    {
        if (!activemembers.Contains(member))
        {
            <li><a href="~/Account/Detail/@member.Name" aria-label="@member.Name, @Localizer["tipViewProfile"]">@member.Name</a> (<snitz-datetime datetime="@member.LastActivity.FromForumDateStr()"></snitz-datetime>) </li>
        }
    }
</ul>
</div>