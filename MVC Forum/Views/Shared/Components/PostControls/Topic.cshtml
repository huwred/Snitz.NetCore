@model dynamic
@inject IBookmark Bookmarks

@{
    bool isadmin = User.IsInRole("Administrator");
    bool ismoderator = User.IsInRole("Moderator");
    bool islocked = Model.Status == 0;
    bool isArchived = Model is ArchivedPost;
    bool isauthor = User.Identity?.Name?.ToLowerInvariant() == Model.Member?.Name.ToLowerInvariant();
    var subscriptions = MemberService.Current()?.Subscriptions;
    bool allowThanks = (bool)TempData["allowThanks"];
    bool isblog = Model.Forum.Type == (int)ForumType.BlogPosts;

    var postid = Model.Id ;
}
@if (User.Identity.IsAuthenticated)
{
    <div class="post-control-btn">
        @if (TempData["List"] != null && (bool)TempData["List"])
        {
            @if (Model.Forum.Subscription == (int)ForumSubscription.TopicSubscription && SnitzConfig.GetIntValue("STRSUBSCRIPTION", 0) != 0 && User.Identity.IsAuthenticated)
            {
                if (subscriptions != null && subscriptions.Where(s => s.PostId == postid).Select(s => s.PostId).Any())
                {
                    <i class="fa-regular fa-bell-slash topic" title="@Localizer["btnUnsubscribe"]" data-id="@postid" data-toggle="tooltip"></i>
                }
                else
                {
                    <i class="fa-regular fa-bell topic" title="@Localizer["cnfSubscribeTopic"]" data-id="@postid" data-toggle="tooltip"></i>
                }
            }
        }
        else if(!isArchived)
        {
            @if (isblog)
            {
                <i snitz-if="@(!islocked || isadmin || ismoderator)" class="fa fa-comment  post-reply" title="@Localizer["tipBlogComment"]" data-id="@postid" data-toggle="tooltip"></i>
            }
            else if (Model.Forum.Replyauth == (int)PostAuthType.Anyone || (Model.Forum.Replyauth == (int)PostAuthType.Moderators && ismoderator) || isadmin)
            {
                <i snitz-if="@(!islocked || isadmin || ismoderator)" class="fa-regular fa-comment  post-reply" title="@Localizer["tipTopicReply"]" data-id="@postid" data-toggle="tooltip"></i>
                <i snitz-if="@(!islocked || isadmin || ismoderator)" class="fa-regular fa-commenting  post-quote" title="@Localizer["tipQuoteTopic"]" data-id="@postid" data-toggle="tooltip"></i>
            }
        }
        @if (SnitzConfig.GetIntValue("STRTHANKS", 0) == 1)
        {
            if (allowThanks && User.Identity.IsAuthenticated)
            {
                @await Component.InvokeAsync("PostThanks", new { template = "TopicSummary", topicid = postid, id = 0, showcount = true, archived = isArchived })
            }
        }
        @if (SnitzConfig.GetIntValue("STRBOOKMARK", 0) == 1 && !isArchived)
        {
            <i snitz-if="@Bookmarks.IsBookmarked(postid)" class="fa fa-bookmark  bookmark-del" title="@Localizer["tipRemoveBookmark"]" data-id="@postid" data-toggle="tooltip"></i>
            <i snitz-if="@(!Bookmarks.IsBookmarked(postid))" class="fa-regular fa-bookmark  bookmark-add" title="@Localizer["tipBookmarkPost"]" data-id="@postid" data-toggle="tooltip"></i>
        }
        @if (isadmin || isauthor || ismoderator)
        {
            <i snitz-if="@((!islocked && isauthor) || isadmin || ismoderator)" class="fa-regular fa-pen-to-square  post-edit" title="@Localizer["tipEditTopic"]" data-id="@postid" data-archived="@isArchived" data-toggle="tooltip"></i>
            <i class="fa-regular fa-trash-can  post-del" title="@Localizer["tipTopicDel"]" data-id="@postid" data-toggle="tooltip" data-archived="@isArchived"></i>
            <i snitz-if="@(islocked && (isadmin || ismoderator) && !isArchived)" class="fa fa-unlock admin  post-lock" title="@Localizer["cnfUnlockTopic"]" data-id="@postid" data-status="1" data-toggle="tooltip"></i>
            <i snitz-if="@((isadmin || ismoderator) && !islocked && !isArchived)" class="fa fa-lock admin  post-lock" title="@Localizer["cnfLockTopic"]" data-id="@postid" data-status="0" data-toggle="tooltip"></i>
            <i snitz-if="@((isadmin || ismoderator) && Model.IsSticky == 0 && !isArchived)" class="fa fa-thumb-tack  post-stick" title="@Localizer["tipMakeSticky"]" data-id="@postid" data-status="1" data-toggle="tooltip"></i>
            <i snitz-if="@((isadmin || ismoderator) && Model.IsSticky == 1 && !isArchived)" class="fa fa-thumb-tack-slash red  post-stick" title="@Localizer["tipUnStick"]" data-id="@postid" data-status="0" data-toggle="tooltip"></i>
            <i snitz-if="@((isadmin || ismoderator) && (Model.Status == (int)Status.OnHold))" class="fa fa-pause admin  post-moderate" title="@Localizer["lblOnhold"]" data-id="@postid" data-toggle="tooltip"></i>
            <i snitz-if="@((isadmin || ismoderator) && (Model.Status == (int)Status.UnModerated))" class="fa fa-hand-paper-o admin  post-moderate" title="@Localizer["lblUnmoderated"]" data-id="@postid" data-toggle="tooltip"></i>
        }
    </div>
}
<storecontent asp-key="topic-post-controls">
    <script>
        $(".fa-bell.forum").off().on("click",
            function(e) {
                e.preventDefault();
                $.get(SnitzVars.baseUrl + "/Forum/Subscribe/?id=" + $(this).data("id"),
                    function() {
                        location.reload();
                    });
            });
        $(".fa-bell-slash.forum").off().on("click",
            function(e) {
                e.preventDefault();
                $.get(SnitzVars.baseUrl + "/Forum/UnSubscribe/?id=" + $(this).data("id"),
                    function() {
                        location.reload();
                    })
            });
        $(".fa-bell.topic").off().on("click",
            function(e) {
                console.log("click");
                e.preventDefault();
                $.get(SnitzVars.baseUrl + "/Topic/Subscribe/?id=" + $(this).data("id"),
                    function() {
                        location.reload();
                    })
            });
        $(".fa-bell-slash.topic").off().on("click",
            function(e) {
                e.preventDefault();
                $.get(SnitzVars.baseUrl + "/Topic/UnSubscribe/?id=" + $(this).data("id"),
                    function() {
                        location.reload();
                    })
            });

        $(".post-moderate").on("click",
            function(e) {
                e.preventDefault();
                var topicid = $(this).data("id");
                
                $.get(SnitzVars.baseUrl + "/Topic/Moderate/" + topicid,
                    function(data) {
                        $('#moderateModal #send-email').html('Post');
                        $('#moderateModal .modal-title').html('Moderate Post');
                        $('#postModeration').html(data);
                        $("#moderateModal").modal('show');
                    });
                $(document).on("submit",
                    "#moderateForm",
                    function(e) {
                        e.preventDefault();
                        $('#send-email').prop('disabled', true);
                        var post_url = $(this).attr("action");
                        var form_data = $('#moderateForm').serialize();
                        $.ajax({
                            url: post_url,
                            type: "POST",
                            data: form_data
                        }).done(function(response) {
                            if (response.result) {
                                $('#moderateModal').modal('hide');
                                location.reload;
                            } else {
                                //Dont close the modal, display the error
                                $('#postModeration').html(response);
                            }
                        });
                    });
            });
    </script>
</storecontent>